{"version":3,"sources":["common/Header.js","utils/ImageProvider.js","pages/items/AboutBox.js","pages/About.js","pages/Project.js","utils/PostsApi.js","pages/items/Login.js","pages/items/TagBox.js","utils/PostsHelper.js","pages/items/PostsListBox.js","pages/Loading.js","pages/Blog.js","pages/NewPosts.js","pages/items/CircleButton.js","utils/MarkdownParser.js","pages/Posts.js","App.js","index.js"],"names":["Header","className","onClick","window","location","href","to","alert","open","urlProvider","nav","listImgUrl","shareImgUrl","upImgUrl","downImgUrl","heartImgUrl","personality","aptitute","skills","tools","test","mind","set","BoxLayout","styled","div","props","primary","css","borderColor","LogoImg","img","AboutBox","url","color","src","About","useState","modalState","setModalState","seletedTest","setSelectedTest","skillColors","toolColors","clickButton","e","modal","document","querySelector","style","display","testType","target","closest","id","map","idx","Project","login","data","a","axios","post","withCreadentials","response","defaults","headers","common","access_token","status","getAll","get","answer","getDetail","postsId","create","Login","history","tryLogin","username","getElementById","password","value","push","type","TagBox","tagName","backgroundColor","getUpdateTime","updateTime","time","Date","year","getFullYear","month","getMonth","day","getDate","hour","getHours","minute","getMinutes","getTagList","resData","tagArray","countMap","total","forEach","r","tag","split","includes","splice","PostsListBox","title","tags","contents","updatedAt","summary","substring","replace","getPostSummary","Loading","useEffect","body","overflow","Blog","setTags","tagCount","setTagCount","curTag","setCurTag","originData","setOriginData","postsData","setPostsData","loading","setLoading","tagButtonClicked","selectedTag","selectedList","filter","String","fontWeight","res","defaultTag","getPostsData","_id","NewPosts","createPosts","CirCleButton","span","process","backgroundImage","Child","marginLeft","MarkdownContents","postsContent","poundCounts","strArray","line","replaceAll","divides","length","pop","components","code","children","docco","language","lineNumberStyle","fontSize","textAlign","showLineNumbers","PreTag","Posts","match","detailData","setDetailData","content","setContent","params","getDetailPosts","remarkPlugins","gfm","documentElement","scrollTop","scrollHeight","App","path","exact","component","ReactDOM","render"],"mappings":"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","file":"static/js/main.67d838b1.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./Header.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const Header = () => {\r\n  function openGithub() {\r\n    window.open(\"https://github.com/ohmink\");\r\n  }\r\n  function goHome() {\r\n    window.location.href = \"/\";\r\n  }\r\n\r\n  return (\r\n    <div className=\"header\">\r\n      <h3 className=\"header_title\" onClick={goHome}>\r\n        권오민의 서재\r\n      </h3>\r\n      <div className=\"header_button_layout\">\r\n        <Link className=\"header_button\" to=\"/about\">\r\n          About\r\n        </Link>\r\n        <buttton\r\n          className=\"header_button\"\r\n          onClick={() => alert(\"준비 중입니다.\")}\r\n        >\r\n          Project\r\n        </buttton>\r\n        <button className=\"header_button\" onClick={openGithub}>\r\n          Github\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","const urlProvider = {\r\n  nav: {\r\n    listImgUrl:\r\n      \"https://user-images.githubusercontent.com/45379812/122217765-b3404400-cee8-11eb-81ce-1aff866c0872.png\",\r\n    shareImgUrl:\r\n      \"https://user-images.githubusercontent.com/45379812/122217768-b3d8da80-cee8-11eb-80cf-7b0d1f955054.png\",\r\n    upImgUrl:\r\n      \"https://user-images.githubusercontent.com/45379812/122217769-b4717100-cee8-11eb-8f88-f24ca7551fe6.png\",\r\n    downImgUrl:\r\n      \"https://user-images.githubusercontent.com/45379812/122217774-b50a0780-cee8-11eb-9634-4b003f53f814.png\",\r\n    heartImgUrl:\r\n      \"https://user-images.githubusercontent.com/45379812/122217777-b50a0780-cee8-11eb-9097-537032e4bff2.png\",\r\n  },\r\n  personality: [\r\n    \"https://user-images.githubusercontent.com/45379812/122217349-4cbb2600-cee8-11eb-8aae-685233ae91f6.png\",\r\n    \"https://user-images.githubusercontent.com/45379812/122217361-4fb61680-cee8-11eb-99dc-155a1c460b00.png\",\r\n    \"https://user-images.githubusercontent.com/45379812/122217384-53e23400-cee8-11eb-8a10-372cd18e78ea.png\",\r\n    \"https://user-images.githubusercontent.com/45379812/122217391-55abf780-cee8-11eb-8e7f-f5db98b2b27a.png\",\r\n    \"https://user-images.githubusercontent.com/45379812/122217400-56dd2480-cee8-11eb-920d-80ed22078199.png\",\r\n  ],\r\n  aptitute: [\r\n    \"https://user-images.githubusercontent.com/45379812/122220168-09ae8200-ceeb-11eb-940f-d0ee522add0e.png\",\r\n    \"https://user-images.githubusercontent.com/45379812/122220172-0adfaf00-ceeb-11eb-9c2e-398b03750ef1.png\",\r\n  ],\r\n  skills: [\r\n    \"https://user-images.githubusercontent.com/45379812/122303062-ea8d1000-cf3d-11eb-8b2f-ff00ef248215.png\",\r\n    \"https://user-images.githubusercontent.com/45379812/122303072-ec56d380-cf3d-11eb-975e-85151b64d34e.png\",\r\n    \"https://user-images.githubusercontent.com/45379812/122303070-ebbe3d00-cf3d-11eb-9ae0-34a0c7eafec7.png\",\r\n    \"https://user-images.githubusercontent.com/45379812/122303051-e8c34c80-cf3d-11eb-99f4-790a32c6b873.png\",\r\n    \"https://user-images.githubusercontent.com/45379812/122303065-eb25a680-cf3d-11eb-8ff4-d191bc2332b8.png\",\r\n    \"https://user-images.githubusercontent.com/45379812/122303058-e95be300-cf3d-11eb-93c3-8ec7b7068a36.png\",\r\n    \"https://user-images.githubusercontent.com/45379812/122303068-ebbe3d00-cf3d-11eb-8cf6-bcf049b94b4c.png\",\r\n  ],\r\n  tools: [\r\n    \"https://user-images.githubusercontent.com/45379812/122303064-eb25a680-cf3d-11eb-9ae0-7861015ec338.png\",\r\n    \"https://user-images.githubusercontent.com/45379812/122303061-ea8d1000-cf3d-11eb-8e9b-44f6a671b31c.png\",\r\n  ],\r\n  test: {\r\n    personality:\r\n      \"https://user-images.githubusercontent.com/45379812/122382577-037cdc00-cfa5-11eb-8961-da16533becaa.png\",\r\n    aptitute:\r\n      \"https://user-images.githubusercontent.com/45379812/122382571-01b31880-cfa5-11eb-8e76-850468537139.png\",\r\n    mind: \"https://user-images.githubusercontent.com/45379812/122382573-02e44580-cfa5-11eb-9ee9-3bdbbc955dab.png\",\r\n  },\r\n  set: \"https://user-images.githubusercontent.com/45379812/122635280-ecadc500-d11d-11eb-9bae-fbe2fe50e681.png\",\r\n};\r\n\r\nexport default urlProvider;\r\n","import React from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\nconst BoxLayout = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin: 10px 10px 10px 0;\r\n  border-radius: 10px;\r\n  border-width: 3px;\r\n  border-style: solid;\r\n  height: 120px;\r\n  width: 120px;\r\n  ${(props) =>\r\n    props.primary &&\r\n    css`\r\n      border-color: ${props.borderColor};\r\n    `};\r\n`;\r\n\r\nconst LogoImg = styled.img`\r\n  width: 100px;\r\n\r\n  margin: 10px;\r\n`;\r\n\r\nexport const AboutBox = ({ url, color }) => {\r\n  return (\r\n    <BoxLayout primary={true} borderColor={color}>\r\n      <LogoImg src={url} />\r\n    </BoxLayout>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport \"./styles/About.css\";\r\nimport urlProvider from \"../utils/ImageProvider\";\r\nimport { AboutBox } from \"./items/AboutBox\";\r\n\r\nexport const About = () => {\r\n  const [modalState, setModalState] = useState(false);\r\n  const [seletedTest, setSelectedTest] = useState([]);\r\n  const skillColors = [\r\n    \"#e34f26\",\r\n    \"#2162af\",\r\n    \"#d6ba32\",\r\n    \"#84b925\",\r\n    \"black\",\r\n    \"#68dbf9\",\r\n    \"#007acc\",\r\n  ];\r\n  const toolColors = [\"black\", \"#007bcd\"];\r\n\r\n  const clickButton = (e) => {\r\n    const modal = document.querySelector(\".about_test_modal\");\r\n\r\n    if (!modalState) {\r\n      const testType = e.target.closest(\"div\").id;\r\n      if (testType === \"personality_test\")\r\n        setSelectedTest(urlProvider.personality);\r\n      else if (testType === \"aptitute_test\")\r\n        setSelectedTest(urlProvider.aptitute);\r\n\r\n      modal.style.display = \"flex\";\r\n      setModalState(true);\r\n    } else {\r\n      modal.style.display = \"none\";\r\n      setModalState(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"about_template\">\r\n      <div className=\"about_tech_layout\">\r\n        <div className=\"about_tech_container\">\r\n          <div>\r\n            <h1 className=\"about_tech_name\">Skills</h1>\r\n            <h1>&nbsp;I Use</h1>\r\n          </div>\r\n          <div className=\"logos_container\">\r\n            {urlProvider.skills.map((url, idx) => (\r\n              <AboutBox key={url} url={url} color={skillColors[idx]} />\r\n            ))}\r\n          </div>\r\n        </div>\r\n        <div className=\"about_tech_container\">\r\n          <div>\r\n            <h1 className=\"about_tech_name\">Tools</h1>\r\n            <h1>&nbsp;I Use</h1>\r\n          </div>\r\n          <div className=\"logos_container\">\r\n            {urlProvider.tools.map((url, idx) => (\r\n              <AboutBox key={url} url={url} color={toolColors[idx]} />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <hr />\r\n      <div className=\"about_test_layout\">\r\n        <div className=\"about_test_title\">\r\n          <h1 className=\"about_tech_name\">Test</h1>\r\n          <h1>&nbsp;About Me</h1>\r\n        </div>\r\n        <div className=\"about_test_container\">\r\n          <div onClick={clickButton} id=\"personality_test\">\r\n            <img src={urlProvider.test.personality} />\r\n            <p>인성검사</p>\r\n          </div>\r\n          <div onClick={clickButton} id=\"aptitute_test\">\r\n            <img src={urlProvider.test.aptitute} />\r\n            <p>적성검사</p>\r\n          </div>\r\n          <div onClick={clickButton} id=\"mind_test\">\r\n            <img src={urlProvider.test.mind} />\r\n            <p>심리검사</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"about_test_modal\" onClick={clickButton}>\r\n        {seletedTest.map((url) => (\r\n          <img key={url} src={url} />\r\n        ))}\r\n      </div>\r\n      <div className=\"about_code_record\">\r\n        <div className=\"about_test_title\">\r\n          <h1>Days I</h1>\r\n          <h1 className=\"about_tech_name\">&nbsp;Code</h1>\r\n        </div>\r\n        <img src=\"https://ghchart.rshah.org/green/ohmink\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"./styles/Project.css\";\r\n// import { ProjectBox } from \"./items/ProjectBox\";\r\n\r\nexport const Project = () => {\r\n  return (\r\n    <div className=\"project\">\r\n      {/* {title.map((v, i) => (\r\n        <ProjectBox key={i} title={v} period={dates[i]} content={contents[i]} />\r\n      ))} */}\r\n    </div>\r\n  );\r\n};\r\n","import axios from \"axios\";\r\n\r\nexport const login = async (data) => {\r\n  const response = await axios.post(\r\n    \"https://ohmink-blog-server.herokuapp.com/user/login\",\r\n    data,\r\n    {\r\n      withCreadentials: true,\r\n    }\r\n  );\r\n\r\n  axios.defaults.headers.common[\r\n    \"Authorization\"\r\n  ] = `Bearer ${response.data.access_token}`;\r\n\r\n  return response.status;\r\n};\r\n\r\nexport const getAll = async () => {\r\n  try {\r\n    const answer = await axios.get(\r\n      `https://ohmink-blog-server.herokuapp.com/posts/getAll`\r\n    );\r\n    return answer.data;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nexport const getDetail = async (postsId) => {\r\n  try {\r\n    const answer = await axios.get(\r\n      `https://ohmink-blog-server.herokuapp.com/posts/getDetail/${postsId}`\r\n    );\r\n    return answer.data;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nexport const create = async (data) => {\r\n  try {\r\n    const response = await axios.post(\r\n      \"https://ohmink-blog-server.herokuapp.com/posts/create\",\r\n      data\r\n    );\r\n\r\n    return response;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nconst remove = () => {};\r\n\r\nconst update = () => {};\r\n","import React from \"react\";\r\nimport \"./styles/Login.css\";\r\nimport { login } from \"../../utils/PostsApi\";\r\n\r\nexport const Login = ({ history }) => {\r\n  const closeLogin = () => {\r\n    const loginTemplate = document.querySelector(\".login_template\");\r\n    loginTemplate.style.display = \"none\";\r\n  };\r\n\r\n  const tryLogin = async () => {\r\n    try {\r\n      const username = document.getElementById(\"input_username\");\r\n      const password = document.getElementById(\"input_password\");\r\n\r\n      const status = await login({\r\n        username: username.value,\r\n        password: password.value,\r\n      });\r\n\r\n      if (status >= 200 && status < 300) {\r\n        history.push(\"/new\");\r\n      }\r\n    } catch (error) {\r\n      alert(\"error\");\r\n      return error;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login_template\">\r\n      <div>\r\n        <p className=\"login_close_button\" onClick={closeLogin}>\r\n          X\r\n        </p>\r\n      </div>\r\n      <p>Admin ID</p>\r\n      <input type=\"text\" id=\"input_username\" />\r\n      <p>Admin PW</p>\r\n      <input type=\"password\" id=\"input_password\" />\r\n      <button onClick={tryLogin}>Login</button>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"./styles/TagBox.css\";\r\n\r\nexport const TagBox = ({ tagName, id }) => {\r\n  const colors = [\"#616e9a\", \"#aa85b3\", \"#f9b5ae\"];\r\n\r\n  return (\r\n    <span style={{ backgroundColor: colors[id] }} className=\"tag_box\">\r\n      {tagName}\r\n    </span>\r\n  );\r\n};\r\n","export const getPostSummary = (contents) =>\r\n  contents\r\n    .substring(0, 1000)\r\n    .replace(/\\([^)]+\\)/g, \"\")\r\n    .replace(/[#*-`]/g, \"\")\r\n    .substring(0, 195) + \".....\";\r\n\r\nexport const getUpdateTime = (updateTime) => {\r\n  const time = new Date(updateTime);\r\n  const year = time.getFullYear();\r\n\r\n  let month = time.getMonth() + 1;\r\n  if (month < 10) month = `0${month}`;\r\n\r\n  let day = time.getDate();\r\n  if (day < 10) day = `0${day}`;\r\n\r\n  let hour = time.getHours();\r\n  if (hour < 12) hour = `오전 ${hour}`;\r\n  else if (hour === 12) hour = `오후 ${hour}`;\r\n  else hour = `오후 ${hour - 12}`;\r\n\r\n  let minute = time.getMinutes();\r\n  if (minute < 10) minute = `0${minute}`;\r\n\r\n  return `${year}-${month}-${day} ${hour}:${minute}`;\r\n};\r\n\r\nexport const getTagList = (resData) => {\r\n  const tagArray = [];\r\n  const countMap = [];\r\n  let total = 0;\r\n\r\n  resData.forEach((r) => {\r\n    if (r.tag) {\r\n      total++;\r\n\r\n      const tags = r.tag.split(\" \");\r\n      tags.forEach((tag) => {\r\n        if (tagArray.includes(tag)) {\r\n          countMap[tag]++;\r\n        } else {\r\n          tagArray.push(tag);\r\n          countMap[tag] = 1;\r\n        }\r\n      });\r\n    }\r\n  });\r\n\r\n  tagArray.splice(0, 0, \"전체보기\");\r\n  countMap[tagArray[0]] = total;\r\n\r\n  return [tagArray, countMap];\r\n};\r\n","import React from \"react\";\r\nimport \"./styles/PostsListBox.css\";\r\nimport { TagBox } from \"./TagBox\";\r\nimport { getPostSummary, getUpdateTime } from \"../../utils/PostsHelper\";\r\n\r\nexport const PostsListBox = ({\r\n  id,\r\n  title,\r\n  tags,\r\n  contents,\r\n  updatedAt,\r\n  history,\r\n}) => {\r\n  const tagArray = tags.split(\" \");\r\n  const summary = getPostSummary(contents);\r\n  const updateTime = getUpdateTime(updatedAt);\r\n  const clickedBox = () => {\r\n    history.push(`/post/:${id}`);\r\n  };\r\n\r\n  return (\r\n    <div className=\"posts_list_box\" onClick={clickedBox}>\r\n      <h2>{title}</h2>\r\n      <p className=\"posts_summary\">{summary}</p>\r\n      <div className=\"posts_list_box_tags\">\r\n        {tagArray.map((tag, idx) => (\r\n          <TagBox key={`tag_box_${idx}`} tagName={tag} id={idx} />\r\n        ))}\r\n      </div>\r\n      <p className=\"posts_updated_time\">{updateTime}</p>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport \"./styles/Loading.css\";\r\n\r\nexport const Loading = () => {\r\n  useEffect(() => {\r\n    const body = document.querySelector(\"body\");\r\n    body.style.overflow = \"hidden\";\r\n\r\n    return () => {\r\n      body.style.overflow = \"auto\";\r\n    };\r\n  }, []);\r\n  return (\r\n    <div className=\"loading_template\">\r\n      <div className=\"animation_box\"></div>\r\n      <span>Loading</span>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./styles/Blog.css\";\r\n\r\nimport { Login } from \"./items/Login\";\r\nimport { PostsListBox } from \"./items/PostsListBox\";\r\nimport { Loading } from \"./Loading\";\r\nimport { getAll } from \"../utils/PostsApi\";\r\nimport { getTagList } from \"../utils/PostsHelper\";\r\nimport urlProvider from \"../utils/ImageProvider\";\r\n\r\nexport const Blog = ({ history }) => {\r\n  const [tags, setTags] = useState(null);\r\n  const [tagCount, setTagCount] = useState(null);\r\n  const [curTag, setCurTag] = useState(null);\r\n  const [originData, setOriginData] = useState(null);\r\n  const [postsData, setPostsData] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const openLogin = () => {\r\n    alert(\"관리자 기능입니다.\");\r\n    const loginTemplate = document.querySelector(\".login_template\");\r\n    loginTemplate.style.display = \"flex\";\r\n  };\r\n\r\n  const tagButtonClicked = (e) => {\r\n    const selectedTag = e.target;\r\n    const selectedList =\r\n      selectedTag.id === \"전체보기\"\r\n        ? originData\r\n        : originData.filter((data) =>\r\n            String(data.tag).includes(selectedTag.id)\r\n          );\r\n\r\n    setPostsData(selectedList);\r\n\r\n    curTag.style.fontWeight = \"normal\";\r\n    curTag.style.color = \"black\";\r\n    selectedTag.style.fontWeight = \"bold\";\r\n    selectedTag.style.color = \"lightseagreen\";\r\n    setCurTag(selectedTag);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const getPostsData = async () => {\r\n      setLoading(true);\r\n      setTags(null);\r\n      setTagCount(null);\r\n      setPostsData(null);\r\n      setOriginData(null);\r\n\r\n      const res = await getAll();\r\n      const [tagArray, countMap] = getTagList(res);\r\n\r\n      setOriginData(res);\r\n      setPostsData(res);\r\n      setTags(tagArray);\r\n      setTagCount(countMap);\r\n      setLoading(false);\r\n\r\n      const defaultTag = document.getElementById(\"전체보기\");\r\n      if (defaultTag) {\r\n        defaultTag.style.fontWeight = \"bold\";\r\n        defaultTag.style.color = \"lightseagreen\";\r\n        setCurTag(defaultTag);\r\n      }\r\n    };\r\n\r\n    getPostsData();\r\n  }, []);\r\n\r\n  if (loading) return <Loading />;\r\n\r\n  return (\r\n    <div className=\"blog_template\">\r\n      <div className=\"tags_container\">\r\n        <div>\r\n          <h3>태그 목록</h3>\r\n          <hr />\r\n          {tags.map((tag, idx) => (\r\n            <button\r\n              key={idx}\r\n              className=\"tag_button\"\r\n              id={tag}\r\n              onClick={tagButtonClicked}\r\n            >\r\n              {tag}({tagCount[tag]})\r\n            </button>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <div className=\"posts_container\">\r\n        {postsData.map((data) => {\r\n          if (data.tag && data.contents)\r\n            return (\r\n              <PostsListBox\r\n                key={data._id}\r\n                id={data._id}\r\n                title={data.title}\r\n                tags={data.tag}\r\n                contents={data.contents}\r\n                updatedAt={data.updatedAt}\r\n                history={history}\r\n              />\r\n            );\r\n        })}\r\n      </div>\r\n      <div>\r\n        <img className=\"set_img\" onClick={openLogin} src={urlProvider.set} />\r\n        <Login history={history} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"./styles/NewPosts.css\";\r\nimport { create } from \"../utils/PostsApi\";\r\n\r\nexport const NewPosts = () => {\r\n  const createPosts = async (e) => {\r\n    const title = document.getElementById(\"posts_create_title\").value;\r\n    const tag = document.getElementById(\"posts_create_tag\").value;\r\n    const contents = document.getElementById(\"posts_create_content\").value;\r\n\r\n    await create({ title: title, tag: tag, contents: contents });\r\n  };\r\n\r\n  return (\r\n    <div className=\"new_blog_template\">\r\n      <p>title</p>\r\n      <input type=\"text\" id=\"posts_create_title\" />\r\n      <p>tag</p>\r\n      <input type=\"text\" id=\"posts_create_tag\" />\r\n      <p>contents</p>\r\n      <textarea type=\"text\" id=\"posts_create_content\" />\r\n      <button onClick={createPosts}>생성</button>\r\n    </div>\r\n  );\r\n};\r\n","import styled, { css } from \"styled-components\";\r\n\r\nexport const CirCleButton = styled.span`\r\n  width: 50px;\r\n  height: 50px;\r\n  border-radius: 25px;\r\n  text-align: center;\r\n  background-color: white;\r\n  background-size: cover;\r\n  margin: 10px;\r\n\r\n  ${(props) =>\r\n    props.primary &&\r\n    css`\r\n      background-image: url(${process.env.PUBLIC_URL + props.backgroundImage});\r\n      background-color: ${props.backgroundColor};\r\n    `}\r\n`;\r\n","import React from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\nconst Child = styled.span`\r\n  margin: 3px;\r\n  color: gray;\r\n  width: 100%;\r\n  ${(props) =>\r\n    props.primary &&\r\n    css`\r\n      margin-left: ${props.marginLeft}px;\r\n    `}\r\n`;\r\n\r\nexport const MarkdownContents = ({ postsContent, className }) => {\r\n  const poundCounts = [];\r\n  const strArray = postsContent\r\n    .split(\"\\n\")\r\n    .filter(\r\n      (line) => line.replaceAll(\" \", \"\")[0] === \"#\" && !line.includes(\"####\")\r\n    )\r\n    .map((line) => {\r\n      const divides = line.split(\"#\");\r\n      poundCounts.push((divides.length - 1) * 10);\r\n      return divides.pop();\r\n    });\r\n\r\n  return (\r\n    <div className={className}>\r\n      {strArray.map((line, idx) => (\r\n        <Child\r\n          key={line + idx}\r\n          primary={true}\r\n          marginLeft={`${poundCounts[idx]}`}\r\n        >\r\n          {line}\r\n        </Child>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport ReactMarkdown from \"react-markdown\";\r\nimport gfm from \"remark-gfm\";\r\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\r\nimport { docco } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\r\n\r\nimport \"./styles/Posts.css\";\r\n\r\nimport { Loading } from \"./Loading\";\r\nimport { TagBox } from \"./items/TagBox\";\r\nimport { CirCleButton } from \"./items/CircleButton\";\r\nimport { getDetail } from \"../utils/PostsApi\";\r\nimport { getUpdateTime } from \"../utils/PostsHelper\";\r\nimport { MarkdownContents } from \"../utils/MarkdownParser\";\r\nimport urlProvider from \"../utils/ImageProvider\";\r\n\r\nconst components = {\r\n  code({ children }) {\r\n    return (\r\n      <SyntaxHighlighter\r\n        style={docco}\r\n        language=\"javascript\"\r\n        children={children}\r\n        lineNumberStyle={{\r\n          color: \"gray\",\r\n          fontSize: \"0.875rem;\",\r\n          textAlign: \"center\",\r\n        }}\r\n        showLineNumbers={true}\r\n        PreTag=\"div\"\r\n      />\r\n    );\r\n  },\r\n};\r\n\r\nexport const Posts = ({ match }) => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [detailData, setDetailData] = useState(null);\r\n  const [tags, setTags] = useState(null);\r\n  const [content, setContent] = useState(null);\r\n\r\n  const toTheTop = () => (document.documentElement.scrollTop = 0);\r\n\r\n  const toTheBottom = () =>\r\n    (document.documentElement.scrollTop =\r\n      document.documentElement.scrollHeight);\r\n\r\n  useEffect(() => {\r\n    const getDetailPosts = async () => {\r\n      setLoading(true);\r\n      setDetailData(null);\r\n      setTags(null);\r\n      setContent(null);\r\n\r\n      const postsId = match.params.postsId;\r\n      const data = await getDetail(postsId);\r\n      const postsContent = data.contents;\r\n\r\n      setDetailData(data);\r\n      setTags(data.tag.split(\" \"));\r\n      setContent(postsContent);\r\n      setLoading(false);\r\n    };\r\n\r\n    getDetailPosts();\r\n  }, []);\r\n\r\n  if (loading) return <Loading />;\r\n\r\n  return (\r\n    <div className=\"posts_detail_template\">\r\n      <div className=\"markdown_contents_container\">\r\n        <MarkdownContents\r\n          postsContent={content}\r\n          className=\"markdown_contents\"\r\n        />\r\n      </div>\r\n      <div className=\"posts_detail_container\">\r\n        <div className=\"posts_detail_title\">\r\n          <p>{detailData.title}</p>\r\n        </div>\r\n        <div className=\"posts_detail_info\">\r\n          <div className=\"posts_detail_info_tag\">\r\n            {tags.map((tag, idx) => (\r\n              <TagBox key={`tag_box_${idx}`} tagName={tag} id={idx} />\r\n            ))}\r\n          </div>\r\n          <div className=\"posts_detail_info_time\">\r\n            {getUpdateTime(detailData.updatedAt)}\r\n          </div>\r\n        </div>\r\n        <ReactMarkdown\r\n          className=\"posts_detail_content\"\r\n          components={components}\r\n          remarkPlugins={[gfm]}\r\n          children={content}\r\n        />\r\n      </div>\r\n      <div className=\"posts_detail_nav\">\r\n        <CirCleButton\r\n          className=\"posts_detail_nav_button\"\r\n          primary={true}\r\n          backgroundImage={urlProvider.nav.upImgUrl}\r\n          backgroundColor=\"whitesmoke\"\r\n          onClick={toTheTop}\r\n        />\r\n        <div>\r\n          <CirCleButton\r\n            className=\"posts_detail_nav_button\"\r\n            primary={true}\r\n            backgroundImage={urlProvider.nav.listImgUrl}\r\n            backgroundColor=\"lightgray\"\r\n          />\r\n          <CirCleButton\r\n            className=\"posts_detail_nav_button\"\r\n            primary={true}\r\n            backgroundImage={urlProvider.nav.heartImgUrl}\r\n          />\r\n          <CirCleButton\r\n            className=\"posts_detail_nav_button\"\r\n            primary={true}\r\n            backgroundImage={urlProvider.nav.shareImgUrl}\r\n          />\r\n        </div>\r\n        <CirCleButton\r\n          className=\"posts_detail_nav_button\"\r\n          primary={true}\r\n          backgroundImage={urlProvider.nav.downImgUrl}\r\n          backgroundColor=\"whitesmoke\"\r\n          onClick={toTheBottom}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Route } from \"react-router\";\r\nimport { Header } from \"./common/Header\";\r\nimport { About } from \"./pages/About\";\r\nimport { Project } from \"./pages/Project\";\r\nimport { Blog } from \"./pages/Blog\";\r\nimport { NewPosts } from \"./pages/NewPosts\";\r\nimport { Posts } from \"./pages/Posts\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Header />\r\n      <div className=\"templates\">\r\n        <Route path=\"/\" exact={true} component={Blog} />\r\n        <Route path=\"/post/:postsId\" exact component={Posts} />\r\n        <Route path=\"/about\" component={About} />\r\n        <Route path=\"/project\" component={Project} />\r\n        <Route path=\"/new\" component={NewPosts} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport \"./index.css\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}