{"version":3,"sources":["common/Header.js","utils/ImageProvider.js","pages/items/AboutBox.js","pages/About.js","pages/toys_items/Cover.js","pages/toys_items/toy_contents/toys.js","pages/toys_items/toy_contents/DarkMode.js","pages/toys_items/toy_contents/Clock.js","pages/toys_items/toy_contents/FlipCard.js","pages/toys_items/Modal.js","utils/CoversHelper.js","pages/Toys.js","utils/PostsApi.js","pages/items/Login.js","pages/items/TagBox.js","utils/PostsHelper.js","pages/items/PostsListBox.js","pages/Loading.js","pages/Blog.js","pages/NewPosts.js","pages/items/CircleButton.js","utils/MarkdownParser.js","pages/Posts.js","App.js","index.js"],"names":["Header","className","onClick","window","location","href","to","open","urlProvider","nav","listImgUrl","shareImgUrl","upImgUrl","downImgUrl","heartImgUrl","personality","aptitute","skills","tools","test","mind","set","BoxLayout","styled","div","props","primary","css","borderColor","LogoImg","img","AboutBox","url","color","src","About","useState","modalState","setModalState","seletedTest","setSelectedTest","skillColors","toolColors","clickButton","e","modal","document","querySelector","style","display","testType","target","closest","id","map","idx","Cover","title","number","onProject","String","padStart","ProjectsContents","component","useEffect","addEventListener","classList","toggle","width","alt","now","Date","getHours","split","hour","setHour","getMinutes","minutes","setMinutes","getSeconds","seconds","setSeconds","interval","useRef","current","setInterval","clearInterval","cards","Array","fill","_","images","frontCards","querySelectorAll","backCards","durations","length","Math","floor","random","forEach","card","animation","Modal","isOpen","project","setIsOpen","Contents","sampleColors","viewInit","setTimeout","covers","transition","margin","header","app","removeChild","cleanTemplate","half","height","zIndex","x","y","yN","rotate","i","cover","transform","backgroundColor","setRightCovers","t","opposite","match","r","setLeftCovers","wheelRight","origin","next","last","wheelLeft","wheel","diff","a","maxCount","num","abs","count","Toys","projects","sample","push","modalStatus","setModalStatus","setProject","startX","setStartX","container","ref","onMouseDown","clientX","onMouseUp","data","isLogin","axios","defaults","headers","common","login","post","withCreadentials","response","access_token","status","getAll","get","answer","getDetail","postsId","create","remove","delete","update","patch","Login","history","tryLogin","username","getElementById","password","value","alert","type","autoComplete","TagBox","tagName","randomIdx","getUpdateTime","updateTime","time","year","getFullYear","month","getMonth","day","getDate","minute","getTagList","resData","tagArray","countMap","total","tag","includes","splice","PostsListBox","tags","contents","updatedAt","summary","substring","replace","getPostSummary","Loading","body","overflow","Blog","setTags","tagCount","setTagCount","curTag","setCurTag","originData","setOriginData","postsData","setPostsData","loading","setLoading","tagButtonClicked","selectedTag","selectedList","filter","fontWeight","res","defaultTag","getPostsData","_id","components","code","children","docco","language","lineNumberStyle","fontSize","textAlign","showLineNumbers","PreTag","NewPosts","defaultInput","state","content","input","setInput","createPosts","goBack","defaultValue","onChange","remarkPlugins","gfm","CirCleButton","span","process","backgroundImage","Child","marginLeft","MarkdownContents","postsContent","poundCounts","strArray","line","replaceAll","divides","pop","Posts","detailData","setDetailData","setContent","updatePosts","pathname","params","join","deletePosts","getDetailPosts","documentElement","scrollTop","scrollHeight","App","path","exact","ReactDOM","render"],"mappings":"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","file":"static/js/main.34abdb8a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Header.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const Header = () => {\r\n  function openGithub() {\r\n    window.open(\"https://github.com/ohmink\");\r\n  }\r\n  function goHome() {\r\n    window.location.href = \"/\";\r\n  }\r\n  function goToys() {\r\n    window.location.href = \"/toys\";\r\n  }\r\n\r\n  return (\r\n    <header className=\"header\">\r\n      <h3 className=\"header_title\" onClick={goHome}>\r\n        권오민의 서재\r\n      </h3>\r\n      <div className=\"header_button_layout\">\r\n        <Link className=\"header_button\" to=\"/about\">\r\n          About\r\n        </Link>\r\n        <button className=\"header_button\" onClick={goToys}>\r\n          Toys\r\n        </button>\r\n        <button className=\"header_button\" onClick={openGithub}>\r\n          Github\r\n        </button>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n","const urlProvider = {\r\n  nav: {\r\n    listImgUrl:\r\n      \"https://user-images.githubusercontent.com/45379812/122217765-b3404400-cee8-11eb-81ce-1aff866c0872.png\",\r\n    shareImgUrl:\r\n      \"https://user-images.githubusercontent.com/45379812/122217768-b3d8da80-cee8-11eb-80cf-7b0d1f955054.png\",\r\n    upImgUrl:\r\n      \"https://user-images.githubusercontent.com/45379812/122217769-b4717100-cee8-11eb-8f88-f24ca7551fe6.png\",\r\n    downImgUrl:\r\n      \"https://user-images.githubusercontent.com/45379812/122217774-b50a0780-cee8-11eb-9634-4b003f53f814.png\",\r\n    heartImgUrl:\r\n      \"https://user-images.githubusercontent.com/45379812/122217777-b50a0780-cee8-11eb-9097-537032e4bff2.png\",\r\n  },\r\n  personality: [\r\n    \"https://user-images.githubusercontent.com/45379812/122217349-4cbb2600-cee8-11eb-8aae-685233ae91f6.png\",\r\n    \"https://user-images.githubusercontent.com/45379812/122217361-4fb61680-cee8-11eb-99dc-155a1c460b00.png\",\r\n    \"https://user-images.githubusercontent.com/45379812/122217384-53e23400-cee8-11eb-8a10-372cd18e78ea.png\",\r\n    \"https://user-images.githubusercontent.com/45379812/122217391-55abf780-cee8-11eb-8e7f-f5db98b2b27a.png\",\r\n    \"https://user-images.githubusercontent.com/45379812/122217400-56dd2480-cee8-11eb-920d-80ed22078199.png\",\r\n  ],\r\n  aptitute: [\r\n    \"https://user-images.githubusercontent.com/45379812/122220168-09ae8200-ceeb-11eb-940f-d0ee522add0e.png\",\r\n    \"https://user-images.githubusercontent.com/45379812/122220172-0adfaf00-ceeb-11eb-9c2e-398b03750ef1.png\",\r\n  ],\r\n  skills: [\r\n    \"https://user-images.githubusercontent.com/45379812/122303062-ea8d1000-cf3d-11eb-8b2f-ff00ef248215.png\",\r\n    \"https://user-images.githubusercontent.com/45379812/122303072-ec56d380-cf3d-11eb-975e-85151b64d34e.png\",\r\n    \"https://user-images.githubusercontent.com/45379812/122303070-ebbe3d00-cf3d-11eb-9ae0-34a0c7eafec7.png\",\r\n    \"https://user-images.githubusercontent.com/45379812/122303051-e8c34c80-cf3d-11eb-99f4-790a32c6b873.png\",\r\n    \"https://user-images.githubusercontent.com/45379812/122303065-eb25a680-cf3d-11eb-8ff4-d191bc2332b8.png\",\r\n    \"https://user-images.githubusercontent.com/45379812/122303058-e95be300-cf3d-11eb-93c3-8ec7b7068a36.png\",\r\n    \"https://user-images.githubusercontent.com/45379812/122303068-ebbe3d00-cf3d-11eb-8cf6-bcf049b94b4c.png\",\r\n  ],\r\n  tools: [\r\n    \"https://user-images.githubusercontent.com/45379812/122303064-eb25a680-cf3d-11eb-9ae0-7861015ec338.png\",\r\n    \"https://user-images.githubusercontent.com/45379812/122303061-ea8d1000-cf3d-11eb-8e9b-44f6a671b31c.png\",\r\n  ],\r\n  test: {\r\n    personality:\r\n      \"https://user-images.githubusercontent.com/45379812/122382577-037cdc00-cfa5-11eb-8961-da16533becaa.png\",\r\n    aptitute:\r\n      \"https://user-images.githubusercontent.com/45379812/122382571-01b31880-cfa5-11eb-8e76-850468537139.png\",\r\n    mind: \"https://user-images.githubusercontent.com/45379812/122382573-02e44580-cfa5-11eb-9ee9-3bdbbc955dab.png\",\r\n  },\r\n  set: \"https://user-images.githubusercontent.com/45379812/122635280-ecadc500-d11d-11eb-9bae-fbe2fe50e681.png\",\r\n};\r\n\r\nexport default urlProvider;\r\n","import React from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\nconst BoxLayout = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin: 10px 10px 10px 0;\r\n  border-radius: 10px;\r\n  border-width: 3px;\r\n  border-style: solid;\r\n  height: 120px;\r\n  width: 120px;\r\n  ${(props) =>\r\n    props.primary &&\r\n    css`\r\n      border-color: ${props.borderColor};\r\n    `};\r\n`;\r\n\r\nconst LogoImg = styled.img`\r\n  width: 100px;\r\n\r\n  margin: 10px;\r\n`;\r\n\r\nexport const AboutBox = ({ url, color }) => {\r\n  return (\r\n    <BoxLayout primary={true} borderColor={color}>\r\n      <LogoImg src={url} />\r\n    </BoxLayout>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport \"./styles/About.css\";\r\nimport urlProvider from \"../utils/ImageProvider\";\r\nimport { AboutBox } from \"./items/AboutBox\";\r\n\r\nexport const About = () => {\r\n  const [modalState, setModalState] = useState(false);\r\n  const [seletedTest, setSelectedTest] = useState([]);\r\n  const skillColors = [\r\n    \"#e34f26\",\r\n    \"#2162af\",\r\n    \"#d6ba32\",\r\n    \"#84b925\",\r\n    \"black\",\r\n    \"#68dbf9\",\r\n    \"#007acc\",\r\n  ];\r\n  const toolColors = [\"black\", \"#007bcd\"];\r\n\r\n  const clickButton = (e) => {\r\n    const modal = document.querySelector(\".about_test_modal\");\r\n\r\n    if (!modalState) {\r\n      const testType = e.target.closest(\"div\").id;\r\n      if (testType === \"personality_test\")\r\n        setSelectedTest(urlProvider.personality);\r\n      else if (testType === \"aptitute_test\")\r\n        setSelectedTest(urlProvider.aptitute);\r\n\r\n      modal.style.display = \"flex\";\r\n      setModalState(true);\r\n    } else {\r\n      modal.style.display = \"none\";\r\n      setModalState(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"about_template\">\r\n      <div className=\"about_tech_layout\">\r\n        <div className=\"about_tech_container\">\r\n          <div>\r\n            <h1 className=\"about_tech_name\">Skills</h1>\r\n            <h1>&nbsp;I Use</h1>\r\n          </div>\r\n          <div className=\"logos_container\">\r\n            {urlProvider.skills.map((url, idx) => (\r\n              <AboutBox key={url} url={url} color={skillColors[idx]} />\r\n            ))}\r\n          </div>\r\n        </div>\r\n        <div className=\"about_tech_container\">\r\n          <div>\r\n            <h1 className=\"about_tech_name\">Tools</h1>\r\n            <h1>&nbsp;I Use</h1>\r\n          </div>\r\n          <div className=\"logos_container\">\r\n            {urlProvider.tools.map((url, idx) => (\r\n              <AboutBox key={url} url={url} color={toolColors[idx]} />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <hr />\r\n      <div className=\"about_test_layout\">\r\n        <div className=\"about_test_title\">\r\n          <h1 className=\"about_tech_name\">Test</h1>\r\n          <h1>&nbsp;About Me</h1>\r\n        </div>\r\n        <div className=\"about_test_container\">\r\n          <div onClick={clickButton} id=\"personality_test\">\r\n            <img src={urlProvider.test.personality} />\r\n            <p>인성검사</p>\r\n          </div>\r\n          <div onClick={clickButton} id=\"aptitute_test\">\r\n            <img src={urlProvider.test.aptitute} />\r\n            <p>적성검사</p>\r\n          </div>\r\n          <div onClick={clickButton} id=\"mind_test\">\r\n            <img src={urlProvider.test.mind} />\r\n            <p>심리검사</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"about_test_modal\" onClick={clickButton}>\r\n        {seletedTest.map((url) => (\r\n          <img key={url} src={url} />\r\n        ))}\r\n      </div>\r\n      <div className=\"about_code_record\">\r\n        <div className=\"about_test_title\">\r\n          <h1>Days I</h1>\r\n          <h1 className=\"about_tech_name\">&nbsp;Code</h1>\r\n        </div>\r\n        <img src=\"https://ghchart.rshah.org/green/ohmink\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"./styles/Cover.css\";\r\n\r\nexport const Cover = ({ title, number, onProject }) => {\r\n  return (\r\n    <li className=\"active\" id={`cover_${number}`} onClick={onProject}>\r\n      <div className=\"cover\">\r\n        <div className=\"top_image_container\">\r\n          <img\r\n            className=\"top_image\"\r\n            src=\"https://user-images.githubusercontent.com/45379812/137182335-947fd04d-c923-4a62-869c-6457ea259bec.png\"\r\n          />\r\n        </div>\r\n        <h1>{title}</h1>\r\n        <div className=\"cover_contents\">\r\n          <h1>{String(number).padStart(2, \"0\")}</h1>\r\n          <img\r\n            className=\"bottom_image\"\r\n            src=\"https://user-images.githubusercontent.com/45379812/137182328-dcc7f602-fc0a-4b12-b9f3-75957fe13326.png\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n","import { FlipCard } from \"./FlipCard\";\r\nimport { Clock } from \"./Clock\";\r\nimport { DarkMode } from \"./DarkMode\";\r\n\r\nconst ProjectsContents = [\r\n  { component: DarkMode, title: \"Dark Mode\" },\r\n  { component: Clock, title: \"Clock\" },\r\n  { component: FlipCard, title: \"Flip Card\" },\r\n];\r\n\r\nexport default ProjectsContents;\r\n","import React, { useEffect } from \"react\";\r\nimport \"./styles/DarkMode.css\";\r\n\r\nexport const DarkMode = () => {\r\n  useEffect(() => {\r\n    document.querySelector(\".dark_mode\").addEventListener(\"click\", () => {\r\n      document.querySelector(\".sun-logo\").classList.toggle(\"animate-sun\");\r\n      document.querySelector(\".moon-logo\").classList.toggle(\"animate-moon\");\r\n      document.querySelector(\".dark_mode\").classList.toggle(\"dark\");\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"dark_mode\">\r\n      <img\r\n        className=\"sun sun-logo\"\r\n        src=\"https://user-images.githubusercontent.com/45379812/142212206-1c874868-2ce3-4181-bc24-fd9bf8274321.png\"\r\n        width=\"100\"\r\n        alt=\"sun\"\r\n      />\r\n      <img\r\n        className=\"moon moon-logo\"\r\n        src=\"https://user-images.githubusercontent.com/45379812/142212210-75cc5a46-0d7d-485c-8337-1fdeddca93ba.png\"\r\n        width=\"100\"\r\n        alt=\"moon\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport \"./styles/Clock.css\";\r\n\r\nexport const Clock = () => {\r\n  let now = new Date();\r\n  const [hour, setHour] = useState(\r\n    String(now.getHours()).padStart(2, \"0\").split(\"\")\r\n  );\r\n  const [minutes, setMinutes] = useState(\r\n    String(now.getMinutes()).padStart(2, \"0\").split(\"\")\r\n  );\r\n  const [seconds, setSeconds] = useState(\r\n    String(now.getSeconds()).padStart(2, \"0\").split(\"\")\r\n  );\r\n  const interval = useRef(null);\r\n\r\n  useEffect(() => {\r\n    interval.current = setInterval(() => {\r\n      now = new Date();\r\n      setHour(String(now.getHours()).padStart(2, \"0\").split(\"\"));\r\n      setMinutes(String(now.getMinutes()).padStart(2, \"0\").split(\"\"));\r\n      setSeconds(String(now.getSeconds()).padStart(2, \"0\").split(\"\"));\r\n    }, 1000);\r\n\r\n    return () => clearInterval(interval.current);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"clock\">\r\n      <div className=\"clock_container\">\r\n        <span className=\"clock_box\">\r\n          {hour.map((number, idx) => (\r\n            <p key={idx}>{number}</p>\r\n          ))}\r\n        </span>\r\n        <span className=\"clock_box\">\r\n          {minutes.map((number, idx) => (\r\n            <p key={idx}>{number}</p>\r\n          ))}\r\n        </span>\r\n        <span className=\"clock_seconds\">\r\n          {seconds.map((number, idx) => (\r\n            <p key={idx}>{number}</p>\r\n          ))}\r\n        </span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport \"./styles/FlipCard.css\";\r\n\r\nexport const FlipCard = () => {\r\n  const cards = new Array(8).fill().map((_, idx) => idx + 1);\r\n  const images = [\r\n    \"https://user-images.githubusercontent.com/45379812/142275222-d918f25b-146b-4a20-b5f6-100b1208044b.png\",\r\n    \"https://user-images.githubusercontent.com/45379812/142275227-a2898900-4a61-4aab-b024-f93605f38c45.png\",\r\n    \"https://user-images.githubusercontent.com/45379812/142275231-ecb537c6-7eac-4f00-85ff-bb4ef320e994.png\",\r\n    \"https://user-images.githubusercontent.com/45379812/142275224-d0263333-b8ef-4a6e-89b4-5aa4038281ea.png\",\r\n  ];\r\n\r\n  useEffect(() => {\r\n    const frontCards = document.querySelectorAll(\".card_front\");\r\n    const backCards = document.querySelectorAll(\".card_back\");\r\n    const durations = new Array(frontCards.length)\r\n      .fill()\r\n      .map((_) => Math.floor(Math.random() * 6) + 2);\r\n\r\n    frontCards.forEach(\r\n      (card, idx) =>\r\n        (card.style.animation = `flipfront ${durations[idx]}s ${idx}s infinite`)\r\n    );\r\n    backCards.forEach(\r\n      (card, idx) =>\r\n        (card.style.animation = `flipback ${durations[idx]}s ${idx}s infinite`)\r\n    );\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"flip_card\">\r\n      {cards.map((number, idx) => (\r\n        <div className=\"card\" key={`card${idx}`}>\r\n          <div className=\"card_front\" key={`card${idx}`}>\r\n            <img src={images[number % 4]} alt=\"Back\" />\r\n          </div>\r\n          <div className=\"card_back\" key={`card${idx}`}>\r\n            <img\r\n              src=\"https://user-images.githubusercontent.com/45379812/142275218-632829c3-915c-4de1-8a23-b09cb7d4cb86.png\"\r\n              alt=\"Back\"\r\n            />\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"./styles/Modal.css\";\r\nimport ProjectsContents from \"./toy_contents/toys\";\r\n\r\nexport const Modal = ({ isOpen, project, setIsOpen }) => {\r\n  const close = (e) => {\r\n    if (e.target.className === \"project_modal\") setIsOpen(false);\r\n  };\r\n  const Contents = ProjectsContents[project]\r\n    ? ProjectsContents[project].component\r\n    : null;\r\n\r\n  return isOpen && Contents ? (\r\n    <section className=\"project_modal\" onClick={close}>\r\n      <Contents />\r\n    </section>\r\n  ) : null;\r\n};\r\n","const sampleColors = [\r\n  \"#cc352b\",\r\n  \"#bd2e25\",\r\n  \"#b02820\",\r\n  \"#e7af02\",\r\n  \"#cc9a01\",\r\n  \"#aa8100\",\r\n  \"#3b358d\",\r\n  \"#3f3991\",\r\n  \"#1b7a8f\",\r\n  \"#19748a\",\r\n  \"#1a758b\",\r\n  \"#6c9c2e\",\r\n  \"#71a72f\",\r\n  \"#7ab337\",\r\n  \"#cc352b\",\r\n  \"#bd2e25\",\r\n  \"#b02820\",\r\n  \"#e7af02\",\r\n  \"#cc9a01\",\r\n  \"#aa8100\",\r\n  \"#aa8100\",\r\n  \"#3b358d\",\r\n  \"#3f3991\",\r\n  \"#1b7a8f\",\r\n  \"#19748a\",\r\n  \"#1a758b\",\r\n  \"#6c9c2e\",\r\n  \"#71a72f\",\r\n  \"#7ab337\",\r\n  \"black\",\r\n];\r\n\r\nconst getTransfrom = (str) => str.match(/[0-9]+|[-0-9]+/g);\r\nconst cleanTemplate = () => {\r\n  const template = document.querySelector(\".templates\");\r\n  template.style.margin = \"0\";\r\n\r\n  const header = document.querySelector(\".header\");\r\n  const app = document.querySelector(\".App\");\r\n  if (header) app.removeChild(header);\r\n};\r\nconst setRightCovers = (covers, half) => {\r\n  let [width, wN] = [174, -6.5];\r\n  let [height, hN] = [240, -8];\r\n  let zIndex = covers.length;\r\n  let [x, y] = [0, 0];\r\n  let [xN, yN] = [80, 8];\r\n  let rotate = 0;\r\n\r\n  for (let i = 0; i <= half; i++) {\r\n    const cover = covers[i];\r\n\r\n    cover.style.width = `${width}px`;\r\n    cover.style.height = `${height}px`;\r\n    cover.style.transform = `translate(${x}%, ${y}%) rotate(${rotate}deg)`;\r\n    cover.style.backgroundColor = sampleColors[i] ? sampleColors[i] : \"black\";\r\n    cover.style.zIndex = zIndex;\r\n\r\n    zIndex--;\r\n    width += wN;\r\n    height += hN;\r\n    x += xN;\r\n    y += yN;\r\n    yN += 10;\r\n    rotate += 8;\r\n  }\r\n};\r\nconst setLeftCovers = (covers, half) => {\r\n  for (let i = covers.length - 1, t = 1; i > half; i--, t++) {\r\n    const cover = covers[i];\r\n    const opposite = covers[t];\r\n    const [x, y, r] = getTransfrom(opposite.style.transform);\r\n\r\n    cover.style.width = opposite.style.width;\r\n    cover.style.height = opposite.style.height;\r\n    cover.style.zIndex = opposite.style.zIndex;\r\n    cover.style.transform = `translate(-${x}%, ${y}%) rotate(-${r}deg)`;\r\n    cover.style.backgroundColor = sampleColors[i];\r\n  }\r\n};\r\n\r\nexport const viewInit = () => {\r\n  setTimeout(() => {\r\n    for (const cover of covers)\r\n      cover.style.transition = \"transform width height 0.1s\";\r\n  }, 1000);\r\n\r\n  cleanTemplate();\r\n\r\n  const covers = document.querySelectorAll(\".active\");\r\n  const half = Math.floor(covers.length / 2);\r\n\r\n  setRightCovers(covers, half);\r\n  setLeftCovers(covers, half);\r\n};\r\n\r\nconst wheelRight = (covers) => {\r\n  const origin = covers[0];\r\n  const width = origin.style.width;\r\n  const height = origin.style.height;\r\n  const zIndex = origin.style.zIndex;\r\n  const transform = origin.style.transform;\r\n\r\n  for (let i = 0; i < covers.length - 1; i++) {\r\n    const cover = covers[i];\r\n    const next = covers[i + 1];\r\n\r\n    cover.style.width = next.style.width;\r\n    cover.style.height = next.style.height;\r\n    cover.style.zIndex = next.style.zIndex;\r\n    cover.style.transform = next.style.transform;\r\n  }\r\n\r\n  const last = covers[covers.length - 1];\r\n  last.style.width = width;\r\n  last.style.height = height;\r\n  last.style.zIndex = zIndex;\r\n  last.style.transform = transform;\r\n};\r\n\r\nconst wheelLeft = (covers) => {\r\n  const origin = covers[covers.length - 1];\r\n  const width = origin.style.width;\r\n  const height = origin.style.height;\r\n  const zIndex = origin.style.zIndex;\r\n  const transform = origin.style.transform;\r\n\r\n  for (let i = covers.length - 1; i > 0; i--) {\r\n    const cover = covers[i];\r\n    const next = covers[i - 1];\r\n\r\n    cover.style.width = next.style.width;\r\n    cover.style.height = next.style.height;\r\n    cover.style.zIndex = next.style.zIndex;\r\n    cover.style.transform = next.style.transform;\r\n  }\r\n\r\n  const last = covers[0];\r\n  last.style.width = width;\r\n  last.style.height = height;\r\n  last.style.zIndex = zIndex;\r\n  last.style.transform = transform;\r\n};\r\n\r\nexport const wheel = async (diff) => {\r\n  const covers = document.querySelectorAll(\".active\");\r\n  const maxCount = Math.floor(covers.length / 2);\r\n  const num = Math.floor(Math.abs(diff) / 250) + 1;\r\n  const count = num >= maxCount ? maxCount : num;\r\n\r\n  if (diff > 0) for (let i = 0; i < count; i++) wheelRight(covers);\r\n  else if (diff < 0) for (let i = 0; i < count; i++) wheelLeft(covers);\r\n};\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport \"./styles/Toys.css\";\r\nimport { Cover } from \"./toys_items/Cover\";\r\nimport { Modal } from \"./toys_items/Modal\";\r\nimport { viewInit, wheel } from \"../utils/CoversHelper\";\r\nimport ProjectsContents from \"./toys_items/toy_contents/toys\";\r\n\r\nexport const Toys = () => {\r\n  const MAX = 30;\r\n  const projects = [...ProjectsContents];\r\n  const sample = new Array(MAX - projects.length).fill({ title: \"None\" });\r\n  if (projects.length < MAX) projects.push(...sample);\r\n\r\n  const [modalStatus, setModalStatus] = useState(false);\r\n  const [project, setProject] = useState(0);\r\n  const [startX, setStartX] = useState();\r\n  const container = useRef();\r\n\r\n  function getXPosition(e) {\r\n    if (!e.target.closest(\".project_modal\")) setStartX(e.clientX);\r\n  }\r\n\r\n  function moveWheel(e) {\r\n    if (!e.target.closest(\".project_modal\")) wheel(e.clientX - startX);\r\n  }\r\n\r\n  const onProject = (e) => {\r\n    const id = e.target.closest(\".active\").id.split(\"_\")[1];\r\n    setModalStatus(true);\r\n    setProject(+id - 1);\r\n  };\r\n\r\n  useEffect(() => {\r\n    viewInit();\r\n  }, []);\r\n\r\n  return (\r\n    <main\r\n      className=\"project\"\r\n      ref={container}\r\n      onMouseDown={getXPosition}\r\n      onMouseUp={moveWheel}\r\n    >\r\n      <Modal\r\n        isOpen={modalStatus}\r\n        project={project}\r\n        setIsOpen={setModalStatus}\r\n      />\r\n      <ul className=\"featured-slider\" id=\"wheel\">\r\n        {projects.map((data, idx) => (\r\n          <Cover\r\n            title={data.title}\r\n            number={idx + 1}\r\n            key={idx}\r\n            onProject={onProject}\r\n          />\r\n        ))}\r\n      </ul>\r\n      <div className=\"wheel_intro\">\r\n        <h2>Circle Slide - Wheel</h2>\r\n        <h3>Created at 2021</h3>\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n","import axios from \"axios\";\r\n\r\nexport const isLogin = () => {\r\n  if (axios.defaults.headers.common[\"Authorization\"]) return true;\r\n  return false;\r\n};\r\n\r\nexport const login = async (data) => {\r\n  const response = await axios.post(\r\n    \"https://ohmink-blog-server.herokuapp.com/user/login\",\r\n    data,\r\n    {\r\n      withCreadentials: true,\r\n    }\r\n  );\r\n\r\n  axios.defaults.headers.common[\r\n    \"Authorization\"\r\n  ] = `Bearer ${response.data.access_token}`;\r\n\r\n  return response.status;\r\n};\r\n\r\nexport const getAll = async () => {\r\n  try {\r\n    const answer = await axios.get(\r\n      \"https://ohmink-blog-server.herokuapp.com/posts/getAll\"\r\n    );\r\n    return answer.data;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nexport const getDetail = async (postsId) => {\r\n  try {\r\n    const answer = await axios.get(\r\n      `https://ohmink-blog-server.herokuapp.com/posts/getDetail/${postsId}`\r\n    );\r\n    return answer.data;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nexport const create = async (data) => {\r\n  try {\r\n    const response = await axios.post(\r\n      \"https://ohmink-blog-server.herokuapp.com/posts/create\",\r\n      data\r\n    );\r\n\r\n    return response;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nexport const remove = async (id) => {\r\n  try {\r\n    const response = await axios.delete(\r\n      `https://ohmink-blog-server.herokuapp.com/posts/delete/${id}`\r\n    );\r\n\r\n    return response.status;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nexport const update = async (id, data) => {\r\n  try {\r\n    const response = await axios.patch(\r\n      `https://ohmink-blog-server.herokuapp.com/posts/patch/${id}`,\r\n      data\r\n    );\r\n\r\n    return response.status;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport \"./styles/Login.css\";\r\nimport { login } from \"../../utils/PostsApi\";\r\n\r\nexport const Login = ({ history }) => {\r\n  const closeLogin = () => {\r\n    const loginTemplate = document.querySelector(\".login_template\");\r\n    loginTemplate.style.display = \"none\";\r\n  };\r\n\r\n  const tryLogin = async () => {\r\n    try {\r\n      const username = document.getElementById(\"input_username\");\r\n      const password = document.getElementById(\"input_password\");\r\n\r\n      const status = await login({\r\n        username: username.value,\r\n        password: password.value,\r\n      });\r\n\r\n      if (status >= 200 && status < 300) history.push(\"/new\");\r\n    } catch (error) {\r\n      alert(\"error\");\r\n      return error;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login_template\">\r\n      <div>\r\n        <h3>If you are not admin →</h3>\r\n        <button className=\"login_close_button\" onClick={closeLogin}>\r\n          X\r\n        </button>\r\n      </div>\r\n      <p>Admin name</p>\r\n      <input type=\"text\" autoComplete=\"off\" id=\"input_username\" />\r\n      <p>Admin password</p>\r\n      <input type=\"password\" autoComplete=\"off\" id=\"input_password\" />\r\n      <button className=\"submit_button\" onClick={tryLogin}>\r\n        Login\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"./styles/TagBox.css\";\r\n\r\nexport const TagBox = ({ tagName }) => {\r\n  const colors = [\r\n    \"#616e9a\",\r\n    \"#aa85b3\",\r\n    \"#f9b5ae\",\r\n    \"#81d4cf\",\r\n    \"#fc651e\",\r\n    \"#8e32ac\",\r\n    \"#5849be\",\r\n    \"#d73642\",\r\n    \"#2bc3d1\",\r\n  ];\r\n  const randomIdx = Math.floor(Math.random() * 8);\r\n\r\n  return (\r\n    <span style={{ backgroundColor: colors[randomIdx] }} className=\"tag_box\">\r\n      {tagName}\r\n    </span>\r\n  );\r\n};\r\n","export const getPostSummary = (contents) =>\r\n  contents\r\n    .substring(0, 1000)\r\n    .replace(/\\([^)]+\\)/g, \"\")\r\n    .replace(/[#*-`]/g, \"\")\r\n    .substring(0, 195) + \".....\";\r\n\r\nexport const getUpdateTime = (updateTime) => {\r\n  const time = new Date(updateTime);\r\n  const year = time.getFullYear();\r\n\r\n  let month = time.getMonth() + 1;\r\n  if (month < 10) month = `0${month}`;\r\n\r\n  let day = time.getDate();\r\n  if (day < 10) day = `0${day}`;\r\n\r\n  let hour = time.getHours();\r\n  if (hour < 12) hour = `오전 ${hour}`;\r\n  else if (hour === 12) hour = `오후 ${hour}`;\r\n  else hour = `오후 ${hour - 12}`;\r\n\r\n  let minute = time.getMinutes();\r\n  if (minute < 10) minute = `0${minute}`;\r\n\r\n  return `${year}-${month}-${day} ${hour}:${minute}`;\r\n};\r\n\r\nexport const getTagList = (resData) => {\r\n  const tagArray = [];\r\n  const countMap = [];\r\n  let total = 0;\r\n\r\n  resData.forEach((r) => {\r\n    if (r.tag) {\r\n      total++;\r\n\r\n      const tags = r.tag.split(\" \");\r\n      tags.forEach((tag) => {\r\n        if (tagArray.includes(tag)) {\r\n          countMap[tag]++;\r\n        } else {\r\n          tagArray.push(tag);\r\n          countMap[tag] = 1;\r\n        }\r\n      });\r\n    }\r\n  });\r\n\r\n  tagArray.splice(0, 0, \"전체보기\");\r\n  countMap[tagArray[0]] = total;\r\n\r\n  return [tagArray, countMap];\r\n};\r\n","import React from \"react\";\r\nimport \"./styles/PostsListBox.css\";\r\nimport { TagBox } from \"./TagBox\";\r\nimport { getPostSummary, getUpdateTime } from \"../../utils/PostsHelper\";\r\n\r\nexport const PostsListBox = ({\r\n  id,\r\n  title,\r\n  tags,\r\n  contents,\r\n  updatedAt,\r\n  history,\r\n}) => {\r\n  const tagArray = tags.split(\" \");\r\n  const summary = getPostSummary(contents);\r\n  const updateTime = getUpdateTime(updatedAt);\r\n  const clickedBox = () => {\r\n    history.push(`/post/:${id}`);\r\n  };\r\n\r\n  return (\r\n    <div className=\"posts_list_box\" onClick={clickedBox}>\r\n      <h2>{title}</h2>\r\n      <p className=\"posts_summary\">{summary}</p>\r\n      <div className=\"posts_list_box_tags\">\r\n        {tagArray.map((tag, idx) => (\r\n          <TagBox key={`tag_box_${idx}`} tagName={tag} />\r\n        ))}\r\n      </div>\r\n      <p className=\"posts_updated_time\">{updateTime}</p>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport \"./styles/Loading.css\";\r\n\r\nexport const Loading = () => {\r\n  useEffect(() => {\r\n    const body = document.querySelector(\"body\");\r\n    body.style.overflow = \"hidden\";\r\n\r\n    return () => {\r\n      body.style.overflow = \"auto\";\r\n    };\r\n  }, []);\r\n  return (\r\n    <div className=\"loading_template\">\r\n      <div className=\"animation_box\"></div>\r\n      <span>Loading</span>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./styles/Blog.css\";\r\n\r\nimport { Login } from \"./items/Login\";\r\nimport { PostsListBox } from \"./items/PostsListBox\";\r\nimport { Loading } from \"./Loading\";\r\nimport { getAll, isLogin } from \"../utils/PostsApi\";\r\nimport { getTagList } from \"../utils/PostsHelper\";\r\nimport urlProvider from \"../utils/ImageProvider\";\r\n\r\nexport const Blog = ({ history }) => {\r\n  const [tags, setTags] = useState(null);\r\n  const [tagCount, setTagCount] = useState(null);\r\n  const [curTag, setCurTag] = useState(null);\r\n  const [originData, setOriginData] = useState(null);\r\n  const [postsData, setPostsData] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const openLogin = () => {\r\n    if (isLogin()) history.push(\"/new\");\r\n    else {\r\n      alert(\"관리자 기능입니다.\");\r\n      const loginTemplate = document.querySelector(\".login_template\");\r\n      loginTemplate.style.display = \"flex\";\r\n    }\r\n  };\r\n\r\n  const tagButtonClicked = (e) => {\r\n    const selectedTag = e.target;\r\n    const selectedList =\r\n      selectedTag.id === \"전체보기\"\r\n        ? originData\r\n        : originData.filter((data) =>\r\n            String(data.tag).includes(selectedTag.id)\r\n          );\r\n\r\n    setPostsData(selectedList);\r\n\r\n    curTag.style.fontWeight = \"normal\";\r\n    curTag.style.color = \"black\";\r\n    selectedTag.style.fontWeight = \"bold\";\r\n    selectedTag.style.color = \"lightseagreen\";\r\n    setCurTag(selectedTag);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const getPostsData = async () => {\r\n      setLoading(true);\r\n      setTags(null);\r\n      setTagCount(null);\r\n      setPostsData(null);\r\n      setOriginData(null);\r\n\r\n      const res = await getAll();\r\n      const [tagArray, countMap] = getTagList(res);\r\n\r\n      setOriginData(res);\r\n      setPostsData(res);\r\n      setTags(tagArray);\r\n      setTagCount(countMap);\r\n      setLoading(false);\r\n\r\n      const defaultTag = document.getElementById(\"전체보기\");\r\n      if (defaultTag) {\r\n        defaultTag.style.fontWeight = \"bold\";\r\n        defaultTag.style.color = \"lightseagreen\";\r\n        setCurTag(defaultTag);\r\n      }\r\n    };\r\n\r\n    getPostsData();\r\n  }, []);\r\n\r\n  if (loading) return <Loading />;\r\n\r\n  return (\r\n    <div className=\"blog_template\">\r\n      <div className=\"tags_container\">\r\n        <div>\r\n          <h3>태그 목록</h3>\r\n          <hr />\r\n          {tags.map((tag, idx) => (\r\n            <button\r\n              key={idx}\r\n              className=\"tag_button\"\r\n              id={tag}\r\n              onClick={tagButtonClicked}\r\n            >\r\n              {tag}({tagCount[tag]})\r\n            </button>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <div className=\"posts_container\">\r\n        {postsData.map((data) => {\r\n          if (data.tag && data.contents)\r\n            return (\r\n              <PostsListBox\r\n                key={data._id}\r\n                id={data._id}\r\n                title={data.title}\r\n                tags={data.tag}\r\n                contents={data.contents}\r\n                updatedAt={data.updatedAt}\r\n                history={history}\r\n              />\r\n            );\r\n        })}\r\n      </div>\r\n      <div>\r\n        <img className=\"set_img\" onClick={openLogin} src={urlProvider.set} />\r\n        <Login history={history} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./styles/NewPosts.css\";\r\nimport ReactMarkdown from \"react-markdown\";\r\nimport gfm from \"remark-gfm\";\r\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\r\nimport { docco } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\r\nimport { create, update } from \"../utils/PostsApi\";\r\n\r\nconst components = {\r\n  code({ children }) {\r\n    return (\r\n      <SyntaxHighlighter\r\n        style={docco}\r\n        language=\"javascript\"\r\n        children={children}\r\n        lineNumberStyle={{\r\n          color: \"gray\",\r\n          fontSize: \"rem;\",\r\n          textAlign: \"center\",\r\n        }}\r\n        showLineNumbers={true}\r\n        PreTag=\"div\"\r\n      />\r\n    );\r\n  },\r\n};\r\n\r\nexport const NewPosts = ({ history }) => {\r\n  const defaultInput = history.location.state\r\n    ? history.location.state.content\r\n    : \"\";\r\n  const [input, setInput] = useState(defaultInput);\r\n\r\n  const createPosts = async () => {\r\n    const title = document.getElementById(\"posts_create_title\").value;\r\n    const tag = document.getElementById(\"posts_create_tag\").value;\r\n    const contents = document.getElementById(\"posts_create_content\").value;\r\n\r\n    if (history.location.state)\r\n      await update(history.location.state.id, {\r\n        title: title,\r\n        tag: tag,\r\n        contents: contents,\r\n      });\r\n    else await create({ title: title, tag: tag, contents: contents });\r\n\r\n    goBack();\r\n  };\r\n\r\n  const goBack = () => {\r\n    history.goBack();\r\n  };\r\n\r\n  return (\r\n    <div className=\"new_posts_template\">\r\n      <div className=\"new_posts_input\">\r\n        <p>title</p>\r\n        <input\r\n          type=\"text\"\r\n          className=\"posts_title\"\r\n          id=\"posts_create_title\"\r\n          defaultValue={\r\n            history.location.state ? history.location.state.title : \"\"\r\n          }\r\n        />\r\n        <p>tag</p>\r\n        <input\r\n          type=\"text\"\r\n          className=\"posts_tags\"\r\n          id=\"posts_create_tag\"\r\n          defaultValue={\r\n            history.location.state ? history.location.state.tags : \"\"\r\n          }\r\n        />\r\n        <p>contents</p>\r\n        <textarea\r\n          className=\"posts_textarea\"\r\n          id=\"posts_create_content\"\r\n          onChange={(e) => setInput(e.target.value)}\r\n          value={input}\r\n        />\r\n        <button onClick={createPosts}>생성</button>\r\n        <button onClick={goBack}>취소</button>\r\n      </div>\r\n      <ReactMarkdown\r\n        className=\"posts_preview\"\r\n        components={components}\r\n        remarkPlugins={[gfm]}\r\n        children={input}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import styled, { css } from \"styled-components\";\r\n\r\nexport const CirCleButton = styled.span`\r\n  width: 50px;\r\n  height: 50px;\r\n  border-radius: 25px;\r\n  text-align: center;\r\n  background-color: white;\r\n  background-size: cover;\r\n  margin: 10px;\r\n\r\n  ${(props) =>\r\n    props.primary &&\r\n    css`\r\n      background-image: url(${process.env.PUBLIC_URL + props.backgroundImage});\r\n      background-color: ${props.backgroundColor};\r\n    `}\r\n`;\r\n","import React from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\nconst Child = styled.span`\r\n  margin: 3px;\r\n  color: gray;\r\n  width: 100%;\r\n  ${(props) =>\r\n    props.primary &&\r\n    css`\r\n      margin-left: ${props.marginLeft}px;\r\n    `}\r\n`;\r\n\r\nexport const MarkdownContents = ({ postsContent, className }) => {\r\n  const poundCounts = [];\r\n  const strArray = postsContent\r\n    .split(\"\\n\")\r\n    .filter(\r\n      (line) => line.replaceAll(\" \", \"\")[0] === \"#\" && !line.includes(\"####\")\r\n    )\r\n    .map((line) => {\r\n      const divides = line.split(\"#\");\r\n      poundCounts.push((divides.length - 1) * 10);\r\n      return divides.pop();\r\n    });\r\n\r\n  return (\r\n    <div className={className}>\r\n      {strArray.map((line, idx) => (\r\n        <Child\r\n          key={line + idx}\r\n          primary={true}\r\n          marginLeft={`${poundCounts[idx]}`}\r\n        >\r\n          {line}\r\n        </Child>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport ReactMarkdown from \"react-markdown\";\r\nimport gfm from \"remark-gfm\";\r\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\r\nimport { docco } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\r\n\r\nimport \"./styles/Posts.css\";\r\n\r\nimport { Loading } from \"./Loading\";\r\nimport { TagBox } from \"./items/TagBox\";\r\nimport { CirCleButton } from \"./items/CircleButton\";\r\nimport { isLogin, getDetail, remove, update } from \"../utils/PostsApi\";\r\nimport { getUpdateTime } from \"../utils/PostsHelper\";\r\nimport { MarkdownContents } from \"../utils/MarkdownParser\";\r\nimport urlProvider from \"../utils/ImageProvider\";\r\n\r\nconst components = {\r\n  code({ children }) {\r\n    return (\r\n      <SyntaxHighlighter\r\n        style={docco}\r\n        language=\"javascript\"\r\n        children={children}\r\n        lineNumberStyle={{\r\n          color: \"gray\",\r\n          fontSize: \"0.875rem\",\r\n          textAlign: \"center\",\r\n        }}\r\n        showLineNumbers={true}\r\n        PreTag=\"div\"\r\n      />\r\n    );\r\n  },\r\n};\r\n\r\nexport const Posts = ({ match, history }) => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [detailData, setDetailData] = useState(null);\r\n  const [tags, setTags] = useState(null);\r\n  const [content, setContent] = useState(null);\r\n\r\n  const updatePosts = async () => {\r\n    history.push({\r\n      pathname: \"/new\",\r\n      state: {\r\n        id: match.params.postsId,\r\n        title: detailData.title,\r\n        tags: tags.join(\" \"),\r\n        content: content,\r\n      },\r\n    });\r\n  };\r\n\r\n  const deletePosts = async () => {\r\n    const res = await remove(match.params.postsId);\r\n    if (res === 200) history.push(\"/\");\r\n  };\r\n\r\n  const toTheTop = () => (document.documentElement.scrollTop = 0);\r\n\r\n  const toTheBottom = () =>\r\n    (document.documentElement.scrollTop =\r\n      document.documentElement.scrollHeight);\r\n\r\n  useEffect(() => {\r\n    const getDetailPosts = async () => {\r\n      setLoading(true);\r\n      setDetailData(null);\r\n      setTags(null);\r\n      setContent(null);\r\n\r\n      const postsId = match.params.postsId;\r\n      const data = await getDetail(postsId);\r\n      const postsContent = data.contents;\r\n\r\n      setDetailData(data);\r\n      setTags(data.tag.split(\" \"));\r\n      setContent(postsContent);\r\n      setLoading(false);\r\n    };\r\n\r\n    getDetailPosts();\r\n  }, []);\r\n\r\n  if (loading) return <Loading />;\r\n\r\n  return (\r\n    <div className=\"posts_detail_template\">\r\n      <div className=\"markdown_contents_container\">\r\n        <MarkdownContents\r\n          postsContent={content}\r\n          className=\"markdown_contents\"\r\n        />\r\n      </div>\r\n      <div className=\"posts_detail_container\">\r\n        <div className=\"posts_detail_title\">\r\n          <p>{detailData.title}</p>\r\n        </div>\r\n        <div className=\"posts_detail_info\">\r\n          <div className=\"posts_detail_info_tag\">\r\n            {tags.map((tag, idx) => (\r\n              <TagBox key={`tag_box_${idx}`} tagName={tag} id={idx} />\r\n            ))}\r\n          </div>\r\n          <div className=\"posts_detail_info_time\">\r\n            {isLogin() ? (\r\n              <div>\r\n                <button onClick={updatePosts}>수정</button>\r\n                <button onClick={deletePosts}>삭제</button>\r\n              </div>\r\n            ) : (\r\n              <span />\r\n            )}\r\n            {getUpdateTime(detailData.updatedAt)}\r\n          </div>\r\n        </div>\r\n        <ReactMarkdown\r\n          className=\"posts_detail_content\"\r\n          components={components}\r\n          remarkPlugins={[gfm]}\r\n          children={content}\r\n        />\r\n      </div>\r\n      <div className=\"posts_detail_nav\">\r\n        <CirCleButton\r\n          className=\"posts_detail_nav_button\"\r\n          primary={true}\r\n          backgroundImage={urlProvider.nav.upImgUrl}\r\n          backgroundColor=\"whitesmoke\"\r\n          onClick={toTheTop}\r\n        />\r\n        <div>\r\n          <CirCleButton\r\n            className=\"posts_detail_nav_button\"\r\n            primary={true}\r\n            backgroundImage={urlProvider.nav.listImgUrl}\r\n            backgroundColor=\"lightgray\"\r\n          />\r\n          <CirCleButton\r\n            className=\"posts_detail_nav_button\"\r\n            primary={true}\r\n            backgroundImage={urlProvider.nav.heartImgUrl}\r\n          />\r\n          <CirCleButton\r\n            className=\"posts_detail_nav_button\"\r\n            primary={true}\r\n            backgroundImage={urlProvider.nav.shareImgUrl}\r\n          />\r\n        </div>\r\n        <CirCleButton\r\n          className=\"posts_detail_nav_button\"\r\n          primary={true}\r\n          backgroundImage={urlProvider.nav.downImgUrl}\r\n          backgroundColor=\"whitesmoke\"\r\n          onClick={toTheBottom}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Route } from \"react-router\";\r\nimport { Header } from \"./common/Header\";\r\nimport { About } from \"./pages/About\";\r\nimport { Toys } from \"./pages/Toys\";\r\nimport { Blog } from \"./pages/Blog\";\r\nimport { NewPosts } from \"./pages/NewPosts\";\r\nimport { Posts } from \"./pages/Posts\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Header />\r\n      <div className=\"templates\">\r\n        <Route path=\"/\" exact={true} component={Blog} />\r\n        <Route path=\"/post/:postsId\" exact component={Posts} />\r\n        <Route path=\"/about\" component={About} />\r\n        <Route path=\"/toys\" component={Toys} />\r\n        <Route path=\"/new\" component={NewPosts} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport \"./index.css\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}