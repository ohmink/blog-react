{"version":3,"sources":["utils/ImageProvider.js","pages/items/AboutBox.js","pages/About.js","pages/toys_items/Cover.js","pages/toys_items/toy_contents/toys.js","pages/toys_items/toy_contents/DarkMode.js","pages/toys_items/toy_contents/Clock.js","pages/toys_items/toy_contents/FlipCard.js","pages/toys_items/Modal.js","utils/CoversHelper.js","pages/Toys.js","common/Header.js","pages/items/SideBar.js","utils/PostsApi.js","pages/items/TagBox.js","utils/PostsHelper.js","pages/items/PostsListBox.js","pages/Loading.js","pages/Blog.js","pages/NewPosts.js","pages/items/MarkdownNav.js","pages/items/CircleButton.js","utils/MarkdownParser.js","pages/Posts.js","App.js","index.js"],"names":["urlProvider","nav","listImgUrl","shareImgUrl","upImgUrl","downImgUrl","heartImgUrl","personality","aptitute","skills","tools","test","mind","set","BoxLayout","styled","div","props","primary","css","borderColor","LogoImg","img","AboutBox","url","color","src","About","useState","modalState","setModalState","seletedTest","setSelectedTest","skillColors","toolColors","clickButton","e","modal","document","querySelector","style","display","testType","target","closest","id","className","map","idx","onClick","alt","Cover","title","number","onProject","String","padStart","ProjectsContents","component","useEffect","addEventListener","classList","toggle","width","Date","now","setNow","getHours","split","hour","setHour","getMinutes","minutes","setMinutes","getSeconds","seconds","setSeconds","interval","useRef","current","setInterval","clearInterval","cards","Array","fill","_","images","frontCards","querySelectorAll","backCards","durations","length","Math","floor","random","forEach","card","animation","Modal","isOpen","project","setIsOpen","Contents","sampleColors","viewInit","covers","half","height","x","y","zIndex","i","cover","transform","backgroundColor","setRightCovers","t","opposite","setLeftCovers","wheelRight","origin","next","last","wheelLeft","wheel","diff","a","maxCount","num","abs","count","Toys","projects","sample","push","modalStatus","setModalStatus","setProject","startX","setStartX","container","ref","onMouseDown","clientX","onMouseUp","data","Header","to","window","open","SideBar","tags","tagButtonClicked","tagCount","history","href","tag","isLogin","axios","defaults","headers","common","getAll","get","answer","getDetail","postsId","create","post","response","remove","delete","status","update","patch","TagBox","tagName","colors","name","findIndex","getUpdateTime","updateTime","time","year","getFullYear","month","getMonth","day","getDate","getTagList","resData","tagArray","countMap","total","r","includes","splice","PostsListBox","updatedAt","contents","Loading","body","overflow","Blog","setTags","setTagCount","curTag","setCurTag","originData","setOriginData","postsData","setPostsData","loading","setLoading","res","defaultTag","getElementById","fontWeight","getPostsData","selectedTag","selectedList","filter","_id","createdAt","components","code","children","docco","language","lineNumberStyle","fontSize","textAlign","showLineNumbers","PreTag","NewPosts","defaultInput","location","state","content","input","setInput","createPosts","value","goBack","type","defaultValue","onChange","remarkPlugins","gfm","MarkdownNav","span","process","backgroundImage","strArray","postsContent","line","replaceAll","getNavItems","reduceText","clientWidth","scrollWidth","str","innerHTML","slice","item","paddingLeft","navTitle","scrollIntoView","updateNavStyles","headings","text","destination","find","ele","setShortcutsEvent","Posts","match","detailData","setDetailData","setContent","updatePosts","pathname","params","join","deletePosts","getDetailPosts","App","path","exact","ReactDOM","render"],"mappings":"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","file":"static/js/main.a082f97a.chunk.js","sourcesContent":["const urlProvider = {\r\n  nav: {\r\n    listImgUrl:\r\n      \"https://user-images.githubusercontent.com/45379812/122217765-b3404400-cee8-11eb-81ce-1aff866c0872.png\",\r\n    shareImgUrl:\r\n      \"https://user-images.githubusercontent.com/45379812/122217768-b3d8da80-cee8-11eb-80cf-7b0d1f955054.png\",\r\n    upImgUrl:\r\n      \"https://user-images.githubusercontent.com/45379812/122217769-b4717100-cee8-11eb-8f88-f24ca7551fe6.png\",\r\n    downImgUrl:\r\n      \"https://user-images.githubusercontent.com/45379812/122217774-b50a0780-cee8-11eb-9634-4b003f53f814.png\",\r\n    heartImgUrl:\r\n      \"https://user-images.githubusercontent.com/45379812/122217777-b50a0780-cee8-11eb-9097-537032e4bff2.png\",\r\n  },\r\n  personality: [\r\n    \"https://user-images.githubusercontent.com/45379812/122217349-4cbb2600-cee8-11eb-8aae-685233ae91f6.png\",\r\n    \"https://user-images.githubusercontent.com/45379812/122217361-4fb61680-cee8-11eb-99dc-155a1c460b00.png\",\r\n    \"https://user-images.githubusercontent.com/45379812/122217384-53e23400-cee8-11eb-8a10-372cd18e78ea.png\",\r\n    \"https://user-images.githubusercontent.com/45379812/122217391-55abf780-cee8-11eb-8e7f-f5db98b2b27a.png\",\r\n    \"https://user-images.githubusercontent.com/45379812/122217400-56dd2480-cee8-11eb-920d-80ed22078199.png\",\r\n  ],\r\n  aptitute: [\r\n    \"https://user-images.githubusercontent.com/45379812/122220168-09ae8200-ceeb-11eb-940f-d0ee522add0e.png\",\r\n    \"https://user-images.githubusercontent.com/45379812/122220172-0adfaf00-ceeb-11eb-9c2e-398b03750ef1.png\",\r\n  ],\r\n  skills: [\r\n    \"https://user-images.githubusercontent.com/45379812/122303062-ea8d1000-cf3d-11eb-8b2f-ff00ef248215.png\",\r\n    \"https://user-images.githubusercontent.com/45379812/122303072-ec56d380-cf3d-11eb-975e-85151b64d34e.png\",\r\n    \"https://user-images.githubusercontent.com/45379812/122303070-ebbe3d00-cf3d-11eb-9ae0-34a0c7eafec7.png\",\r\n    \"https://user-images.githubusercontent.com/45379812/122303051-e8c34c80-cf3d-11eb-99f4-790a32c6b873.png\",\r\n    \"https://user-images.githubusercontent.com/45379812/122303065-eb25a680-cf3d-11eb-8ff4-d191bc2332b8.png\",\r\n    \"https://user-images.githubusercontent.com/45379812/122303058-e95be300-cf3d-11eb-93c3-8ec7b7068a36.png\",\r\n    \"https://user-images.githubusercontent.com/45379812/122303068-ebbe3d00-cf3d-11eb-8cf6-bcf049b94b4c.png\",\r\n  ],\r\n  tools: [\r\n    \"https://user-images.githubusercontent.com/45379812/122303064-eb25a680-cf3d-11eb-9ae0-7861015ec338.png\",\r\n    \"https://user-images.githubusercontent.com/45379812/122303061-ea8d1000-cf3d-11eb-8e9b-44f6a671b31c.png\",\r\n  ],\r\n  test: {\r\n    personality:\r\n      \"https://user-images.githubusercontent.com/45379812/122382577-037cdc00-cfa5-11eb-8961-da16533becaa.png\",\r\n    aptitute:\r\n      \"https://user-images.githubusercontent.com/45379812/122382571-01b31880-cfa5-11eb-8e76-850468537139.png\",\r\n    mind: \"https://user-images.githubusercontent.com/45379812/122382573-02e44580-cfa5-11eb-9ee9-3bdbbc955dab.png\",\r\n  },\r\n  set: \"https://user-images.githubusercontent.com/45379812/122635280-ecadc500-d11d-11eb-9bae-fbe2fe50e681.png\",\r\n};\r\n\r\nexport default urlProvider;\r\n","import React from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\nconst BoxLayout = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin: 10px 10px 10px 0;\r\n  border-radius: 10px;\r\n  border-width: 3px;\r\n  border-style: solid;\r\n  height: 120px;\r\n  width: 120px;\r\n  ${(props) =>\r\n    props.primary &&\r\n    css`\r\n      border-color: ${props.borderColor};\r\n    `};\r\n`;\r\n\r\nconst LogoImg = styled.img`\r\n  width: 100px;\r\n\r\n  margin: 10px;\r\n`;\r\n\r\nexport const AboutBox = ({ url, color }) => {\r\n  return (\r\n    <BoxLayout primary={true} borderColor={color}>\r\n      <LogoImg src={url} />\r\n    </BoxLayout>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport \"./styles/About.css\";\r\nimport urlProvider from \"../utils/ImageProvider\";\r\nimport { AboutBox } from \"./items/AboutBox\";\r\n\r\nexport const About = () => {\r\n  const [modalState, setModalState] = useState(false);\r\n  const [seletedTest, setSelectedTest] = useState([]);\r\n  const skillColors = [\r\n    \"#e34f26\",\r\n    \"#2162af\",\r\n    \"#d6ba32\",\r\n    \"#84b925\",\r\n    \"black\",\r\n    \"#68dbf9\",\r\n    \"#007acc\",\r\n  ];\r\n  const toolColors = [\"black\", \"#007bcd\"];\r\n\r\n  const clickButton = (e) => {\r\n    const modal = document.querySelector(\".about_test_modal\");\r\n\r\n    if (!modalState) {\r\n      const testType = e.target.closest(\"div\").id;\r\n      if (testType === \"personality_test\")\r\n        setSelectedTest(urlProvider.personality);\r\n      else if (testType === \"aptitute_test\")\r\n        setSelectedTest(urlProvider.aptitute);\r\n\r\n      modal.style.display = \"flex\";\r\n      setModalState(true);\r\n    } else {\r\n      modal.style.display = \"none\";\r\n      setModalState(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"about_template\">\r\n      <div className=\"about_tech_layout\">\r\n        <div className=\"about_tech_container\">\r\n          <div>\r\n            <h1 className=\"about_tech_name\">Skills</h1>\r\n            <h1>&nbsp;I Use</h1>\r\n          </div>\r\n          <div className=\"logos_container\">\r\n            {urlProvider.skills.map((url, idx) => (\r\n              <AboutBox key={url} url={url} color={skillColors[idx]} />\r\n            ))}\r\n          </div>\r\n        </div>\r\n        <div className=\"about_tech_container\">\r\n          <div>\r\n            <h1 className=\"about_tech_name\">Tools</h1>\r\n            <h1>&nbsp;I Use</h1>\r\n          </div>\r\n          <div className=\"logos_container\">\r\n            {urlProvider.tools.map((url, idx) => (\r\n              <AboutBox key={url} url={url} color={toolColors[idx]} />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <hr />\r\n      <div className=\"about_test_layout\">\r\n        <div className=\"about_test_title\">\r\n          <h1 className=\"about_tech_name\">Test</h1>\r\n          <h1>&nbsp;About Me</h1>\r\n        </div>\r\n        <div className=\"about_test_container\">\r\n          <div onClick={clickButton} id=\"personality_test\">\r\n            <img alt=\"\" src={urlProvider.test.personality} />\r\n            <p>인성검사</p>\r\n          </div>\r\n          <div onClick={clickButton} id=\"aptitute_test\">\r\n            <img alt=\"\" src={urlProvider.test.aptitute} />\r\n            <p>적성검사</p>\r\n          </div>\r\n          <div onClick={clickButton} id=\"mind_test\">\r\n            <img alt=\"\" src={urlProvider.test.mind} />\r\n            <p>심리검사</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"about_test_modal\" onClick={clickButton}>\r\n        {seletedTest.map((url) => (\r\n          <img alt=\"\" key={url} src={url} />\r\n        ))}\r\n      </div>\r\n      <div className=\"about_code_record\">\r\n        <div className=\"about_test_title\">\r\n          <h1>Days I</h1>\r\n          <h1 className=\"about_tech_name\">&nbsp;Code</h1>\r\n        </div>\r\n        <img alt=\"\" src=\"https://ghchart.rshah.org/green/ohmink\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"./styles/Cover.css\";\r\n\r\nexport const Cover = ({ title, number, onProject }) => {\r\n  return (\r\n    <div className=\"active\" id={`cover_${number}`} onClick={onProject}>\r\n      <div className=\"cover\">\r\n        <div className=\"top_image_container\">\r\n          <img\r\n            alt=\"\"\r\n            className=\"top_image\"\r\n            src=\"https://user-images.githubusercontent.com/45379812/137182335-947fd04d-c923-4a62-869c-6457ea259bec.png\"\r\n          />\r\n        </div>\r\n        <h1>{title}</h1>\r\n        <div className=\"cover_contents\">\r\n          <h1>{String(number).padStart(2, \"0\")}</h1>\r\n          <img\r\n            alt=\"\"\r\n            className=\"bottom_image\"\r\n            src=\"https://user-images.githubusercontent.com/45379812/137182328-dcc7f602-fc0a-4b12-b9f3-75957fe13326.png\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { FlipCard } from \"./FlipCard\";\r\nimport { Clock } from \"./Clock\";\r\nimport { DarkMode } from \"./DarkMode\";\r\n\r\nconst ProjectsContents = [\r\n  { component: DarkMode, title: \"Dark Mode\" },\r\n  { component: Clock, title: \"Clock\" },\r\n  { component: FlipCard, title: \"Flip Card\" },\r\n];\r\n\r\nexport default ProjectsContents;\r\n","import React, { useEffect } from \"react\";\r\nimport \"./styles/DarkMode.css\";\r\n\r\nexport const DarkMode = () => {\r\n  useEffect(() => {\r\n    document.querySelector(\".dark_mode\").addEventListener(\"click\", () => {\r\n      document.querySelector(\".sun-logo\").classList.toggle(\"animate-sun\");\r\n      document.querySelector(\".moon-logo\").classList.toggle(\"animate-moon\");\r\n      document.querySelector(\".dark_mode\").classList.toggle(\"dark\");\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"dark_mode\">\r\n      <img\r\n        className=\"sun sun-logo\"\r\n        src=\"https://user-images.githubusercontent.com/45379812/142212206-1c874868-2ce3-4181-bc24-fd9bf8274321.png\"\r\n        width=\"100\"\r\n        alt=\"sun\"\r\n      />\r\n      <img\r\n        className=\"moon moon-logo\"\r\n        src=\"https://user-images.githubusercontent.com/45379812/142212210-75cc5a46-0d7d-485c-8337-1fdeddca93ba.png\"\r\n        width=\"100\"\r\n        alt=\"moon\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport \"./styles/Clock.css\";\r\n\r\nexport const Clock = () => {\r\n  // let now = new Date();\r\n  const [now, setNow] = useState(new Date());\r\n  const [hour, setHour] = useState(\r\n    String(now.getHours()).padStart(2, \"0\").split(\"\")\r\n  );\r\n  const [minutes, setMinutes] = useState(\r\n    String(now.getMinutes()).padStart(2, \"0\").split(\"\")\r\n  );\r\n  const [seconds, setSeconds] = useState(\r\n    String(now.getSeconds()).padStart(2, \"0\").split(\"\")\r\n  );\r\n  const interval = useRef(null);\r\n\r\n  useEffect(() => {\r\n    interval.current = setInterval(() => {\r\n      setNow(new Date());\r\n      setHour(String(now.getHours()).padStart(2, \"0\").split(\"\"));\r\n      setMinutes(String(now.getMinutes()).padStart(2, \"0\").split(\"\"));\r\n      setSeconds(String(now.getSeconds()).padStart(2, \"0\").split(\"\"));\r\n    }, 1000);\r\n\r\n    return () => clearInterval(interval.current);\r\n  }, [now]);\r\n\r\n  return (\r\n    <div className=\"clock\">\r\n      <div className=\"clock_container\">\r\n        <span className=\"clock_box\">\r\n          {hour.map((number, idx) => (\r\n            <p key={idx}>{number}</p>\r\n          ))}\r\n        </span>\r\n        <span className=\"clock_box\">\r\n          {minutes.map((number, idx) => (\r\n            <p key={idx}>{number}</p>\r\n          ))}\r\n        </span>\r\n        <span className=\"clock_seconds\">\r\n          {seconds.map((number, idx) => (\r\n            <p key={idx}>{number}</p>\r\n          ))}\r\n        </span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport \"./styles/FlipCard.css\";\r\n\r\nexport const FlipCard = () => {\r\n  const cards = new Array(8).fill().map((_, idx) => idx + 1);\r\n  const images = [\r\n    \"https://user-images.githubusercontent.com/45379812/142275222-d918f25b-146b-4a20-b5f6-100b1208044b.png\",\r\n    \"https://user-images.githubusercontent.com/45379812/142275227-a2898900-4a61-4aab-b024-f93605f38c45.png\",\r\n    \"https://user-images.githubusercontent.com/45379812/142275231-ecb537c6-7eac-4f00-85ff-bb4ef320e994.png\",\r\n    \"https://user-images.githubusercontent.com/45379812/142275224-d0263333-b8ef-4a6e-89b4-5aa4038281ea.png\",\r\n  ];\r\n\r\n  useEffect(() => {\r\n    const frontCards = document.querySelectorAll(\".card_front\");\r\n    const backCards = document.querySelectorAll(\".card_back\");\r\n    const durations = new Array(frontCards.length)\r\n      .fill()\r\n      .map((_) => Math.floor(Math.random() * 6) + 2);\r\n\r\n    frontCards.forEach(\r\n      (card, idx) =>\r\n        (card.style.animation = `flipfront ${durations[idx]}s ${idx}s infinite`)\r\n    );\r\n    backCards.forEach(\r\n      (card, idx) =>\r\n        (card.style.animation = `flipback ${durations[idx]}s ${idx}s infinite`)\r\n    );\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"flip_card\">\r\n      {cards.map((number, idx) => (\r\n        <div className=\"card\" key={`card${idx}`}>\r\n          <div className=\"card_front\" key={`card${idx}`}>\r\n            <img src={images[number % 4]} alt=\"Back\" />\r\n          </div>\r\n          <div className=\"card_back\" key={`card${idx}`}>\r\n            <img\r\n              src=\"https://user-images.githubusercontent.com/45379812/142275218-632829c3-915c-4de1-8a23-b09cb7d4cb86.png\"\r\n              alt=\"Back\"\r\n            />\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"./styles/Modal.css\";\r\nimport ProjectsContents from \"./toy_contents/toys\";\r\n\r\nexport const Modal = ({ isOpen, project, setIsOpen }) => {\r\n  const close = (e) => {\r\n    if (e.target.className === \"project_modal\") setIsOpen(false);\r\n  };\r\n  const Contents = ProjectsContents[project]\r\n    ? ProjectsContents[project].component\r\n    : null;\r\n\r\n  return isOpen && Contents ? (\r\n    <section className=\"project_modal\" onClick={close}>\r\n      <Contents />\r\n    </section>\r\n  ) : null;\r\n};\r\n","const sampleColors = [\r\n  \"#cc352b\",\r\n  \"#bd2e25\",\r\n  \"#b02820\",\r\n  \"#e7af02\",\r\n  \"#cc9a01\",\r\n  \"#aa8100\",\r\n  \"#3b358d\",\r\n  \"#3f3991\",\r\n  \"#1b7a8f\",\r\n  \"#19748a\",\r\n  \"#1a758b\",\r\n  \"#6c9c2e\",\r\n  \"#71a72f\",\r\n  \"#7ab337\",\r\n  \"gray\",\r\n];\r\n\r\nconst setRightCovers = (covers, half) => {\r\n  let width = 15,\r\n    height = 20,\r\n    x = -50,\r\n    y = -30;\r\n  let zIndex = covers.length;\r\n\r\n  for (let i = 0; i <= half; i++) {\r\n    const cover = covers[i];\r\n\r\n    cover.style.width = `${width}rem`;\r\n    cover.style.height = `${height}rem`;\r\n    cover.style.transform = `translate(${x}%, ${y}%)`;\r\n    cover.style.backgroundColor = sampleColors[i] ? sampleColors[i] : \"black\";\r\n    cover.style.zIndex = zIndex;\r\n\r\n    zIndex--;\r\n    width -= 0.5;\r\n    height--;\r\n    x += 60;\r\n    y += 20;\r\n  }\r\n};\r\nconst setLeftCovers = (covers, half) => {\r\n  let x = -50,\r\n    y = -30;\r\n  for (let i = covers.length - 1, t = 1; i > half; i--, t++) {\r\n    x -= 60;\r\n    y -= 20;\r\n    const cover = covers[i];\r\n    const opposite = covers[t];\r\n\r\n    cover.style.width = opposite.style.width;\r\n    cover.style.height = opposite.style.height;\r\n    cover.style.zIndex = opposite.style.zIndex;\r\n    cover.style.transform = `translate(${x}%, ${y}%)`;\r\n    cover.style.backgroundColor = sampleColors[i];\r\n  }\r\n};\r\n\r\nexport const viewInit = () => {\r\n  const covers = document.querySelectorAll(\".active\");\r\n  const half = Math.floor(covers.length / 2);\r\n\r\n  setRightCovers(covers, half);\r\n  setLeftCovers(covers, half);\r\n};\r\n\r\nconst wheelRight = (covers) => {\r\n  const origin = covers[0];\r\n  const width = origin.style.width;\r\n  const height = origin.style.height;\r\n  const zIndex = origin.style.zIndex;\r\n  const transform = origin.style.transform;\r\n\r\n  for (let i = 0; i < covers.length - 1; i++) {\r\n    const cover = covers[i];\r\n    const next = covers[i + 1];\r\n\r\n    cover.style.width = next.style.width;\r\n    cover.style.height = next.style.height;\r\n    cover.style.zIndex = next.style.zIndex;\r\n    cover.style.transform = next.style.transform;\r\n  }\r\n\r\n  const last = covers[covers.length - 1];\r\n  last.style.width = width;\r\n  last.style.height = height;\r\n  last.style.zIndex = zIndex;\r\n  last.style.transform = transform;\r\n};\r\n\r\nconst wheelLeft = (covers) => {\r\n  const origin = covers[covers.length - 1];\r\n  const width = origin.style.width;\r\n  const height = origin.style.height;\r\n  const zIndex = origin.style.zIndex;\r\n  const transform = origin.style.transform;\r\n\r\n  for (let i = covers.length - 1; i > 0; i--) {\r\n    const cover = covers[i];\r\n    const next = covers[i - 1];\r\n\r\n    cover.style.width = next.style.width;\r\n    cover.style.height = next.style.height;\r\n    cover.style.zIndex = next.style.zIndex;\r\n    cover.style.transform = next.style.transform;\r\n  }\r\n\r\n  const last = covers[0];\r\n  last.style.width = width;\r\n  last.style.height = height;\r\n  last.style.zIndex = zIndex;\r\n  last.style.transform = transform;\r\n};\r\n\r\nexport const wheel = async (diff) => {\r\n  const covers = document.querySelectorAll(\".active\");\r\n  const maxCount = Math.floor(covers.length / 2);\r\n  const num = Math.floor(Math.abs(diff) / 250) + 1;\r\n  const count = num >= maxCount ? maxCount : num;\r\n\r\n  if (diff > 0) for (let i = 0; i < count; i++) wheelRight(covers);\r\n  else if (diff < 0) for (let i = 0; i < count; i++) wheelLeft(covers);\r\n};\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport \"./styles/Toys.css\";\r\nimport { Cover } from \"./toys_items/Cover\";\r\nimport { Modal } from \"./toys_items/Modal\";\r\nimport { viewInit, wheel } from \"../utils/CoversHelper\";\r\nimport ProjectsContents from \"./toys_items/toy_contents/toys\";\r\n\r\nexport const Toys = () => {\r\n  const MAX = 15;\r\n  const projects = [...ProjectsContents];\r\n  const sample = new Array(MAX - projects.length).fill({ title: \"None\" });\r\n  if (projects.length < MAX) projects.push(...sample);\r\n\r\n  const [modalStatus, setModalStatus] = useState(false);\r\n  const [project, setProject] = useState(0);\r\n  const [startX, setStartX] = useState();\r\n  const container = useRef();\r\n\r\n  function getXPosition(e) {\r\n    if (!e.target.closest(\".project_modal\")) setStartX(e.clientX);\r\n  }\r\n\r\n  function moveWheel(e) {\r\n    if (!e.target.closest(\".project_modal\")) wheel(e.clientX - startX);\r\n  }\r\n\r\n  const onProject = (e) => {\r\n    const card = e.target.closest(\".active\");\r\n    const id = card.id.split(\"_\")[1];\r\n\r\n    setModalStatus(true);\r\n    setProject(+id - 1);\r\n  };\r\n\r\n  useEffect(() => {\r\n    viewInit();\r\n  }, []);\r\n\r\n  return (\r\n    <main\r\n      className=\"project\"\r\n      ref={container}\r\n      onMouseDown={getXPosition}\r\n      onMouseUp={moveWheel}\r\n    >\r\n      <Modal\r\n        isOpen={modalStatus}\r\n        project={project}\r\n        setIsOpen={setModalStatus}\r\n      />\r\n      <div className=\"circle_slider\" id=\"wheel\">\r\n        {projects.map((data, idx) => (\r\n          <Cover\r\n            title={data.title}\r\n            number={idx + 1}\r\n            key={idx}\r\n            onProject={onProject}\r\n          />\r\n        ))}\r\n      </div>\r\n      <div className=\"wheel_intro\">\r\n        <h2>Circle Slide - Wheel</h2>\r\n        <h3>Created at 2021</h3>\r\n      </div>\r\n      {/* <div className=\"Card_intro\">\r\n        <h2>Card Title</h2>\r\n        <h3>Created at 2021</h3>\r\n      </div> */}\r\n    </main>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"./Header.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const Header = () => {\r\n  const openGithub = () => window.open(\"https://github.com/ohmink\");\r\n\r\n  return (\r\n    <header className=\"header\">\r\n      <div className=\"header_button_layout\">\r\n        <Link className=\"header_button\" to=\"/about\">\r\n          About\r\n        </Link>\r\n        <Link className=\"header_button\" to=\"/toys\">\r\n          Toys\r\n        </Link>\r\n        <button className=\"header_button\" onClick={openGithub}>\r\n          Github\r\n        </button>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"./styles/SideBar.css\";\r\n\r\nexport const SideBar = ({ tags, tagButtonClicked, tagCount, history }) => {\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <a href=\"./\">Code Story</a>\r\n      <div>\r\n        <h3>태그 목록</h3>\r\n        <hr />\r\n        {tags.map((tag, idx) => (\r\n          <button\r\n            key={idx}\r\n            className=\"tag_button\"\r\n            id={tag}\r\n            onClick={tagButtonClicked}\r\n          >\r\n            {tag}({tagCount[tag]})\r\n          </button>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import axios from \"axios\";\r\n\r\nexport const isLogin = () => {\r\n  if (axios.defaults.headers.common[\"Authorization\"]) return true;\r\n  return false;\r\n};\r\n\r\nexport const login = async (data) => {\r\n  const response = await axios.post(\r\n    \"https://ohmink-blog-server.herokuapp.com/user/login\",\r\n    data,\r\n    {\r\n      withCreadentials: true,\r\n    }\r\n  );\r\n\r\n  axios.defaults.headers.common[\r\n    \"Authorization\"\r\n  ] = `Bearer ${response.data.access_token}`;\r\n\r\n  return response.status;\r\n};\r\n\r\nexport const getAll = async () => {\r\n  try {\r\n    const answer = await axios.get(\r\n      \"https://ohmink-blog-server.herokuapp.com/posts/getAll\"\r\n    );\r\n    return answer.data;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nexport const getDetail = async (postsId) => {\r\n  try {\r\n    const answer = await axios.get(\r\n      `https://ohmink-blog-server.herokuapp.com/posts/getDetail/${postsId}`\r\n    );\r\n    return answer.data;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nexport const create = async (data) => {\r\n  try {\r\n    const response = await axios.post(\r\n      \"https://ohmink-blog-server.herokuapp.com/posts/create\",\r\n      data\r\n    );\r\n\r\n    return response;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nexport const remove = async (id) => {\r\n  try {\r\n    const response = await axios.delete(\r\n      `https://ohmink-blog-server.herokuapp.com/posts/delete/${id}`\r\n    );\r\n\r\n    return response.status;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nexport const update = async (id, data) => {\r\n  try {\r\n    const response = await axios.patch(\r\n      `https://ohmink-blog-server.herokuapp.com/posts/patch/${id}`,\r\n      data\r\n    );\r\n\r\n    return response.status;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport \"./styles/TagBox.css\";\r\n\r\nexport const TagBox = ({ tagName }) => {\r\n  const colors = [\r\n    { name: \"알고리즘\", color: \"#6E7371\" },\r\n    { name: \"Javascript\", color: \"#9EAFA8\" },\r\n    { name: \"CS\", color: \"#534157\" },\r\n    { name: \"네트워크\", color: \"#736C74\" },\r\n    { name: \"면접\", color: \"#758B87\" },\r\n    { name: \"브라우저\", color: \"#A1A69C\" },\r\n    { name: \"웹개발\", color: \"#363F59\" },\r\n    // {name: \"알고리즘\", color:\"#d73642\"},\r\n    // {name: \"알고리즘\", color:\"#2bc3d1\"},\r\n  ];\r\n  const idx = colors.findIndex((data) => data.name === tagName);\r\n\r\n  return (\r\n    <span style={{ backgroundColor: colors[idx].color }} className=\"tag_box\">\r\n      {tagName}\r\n    </span>\r\n  );\r\n};\r\n","export const getPostSummary = (contents) =>\r\n  contents\r\n    .substring(0, 1000)\r\n    .replace(/\\([^)]+\\)/g, \"\")\r\n    .replace(/[#*-`]/g, \"\")\r\n    .substring(0, 195) + \".....\";\r\n\r\nexport const getUpdateTime = (updateTime) => {\r\n  const time = new Date(updateTime);\r\n  const year = time.getFullYear();\r\n\r\n  let month = time.getMonth() + 1;\r\n  if (month < 10) month = `0${month}`;\r\n\r\n  let day = time.getDate();\r\n  if (day < 10) day = `0${day}`;\r\n\r\n  // let hour = time.getHours();\r\n  // if (hour < 12) hour = `오전 ${hour}`;\r\n  // else if (hour === 12) hour = `오후 ${hour}`;\r\n  // else hour = `오후 ${hour - 12}`;\r\n\r\n  // let minute = time.getMinutes();\r\n  // if (minute < 10) minute = `0${minute}`;\r\n\r\n  return `${year}-${month}-${day}`;\r\n};\r\n\r\nexport const getTagList = (resData) => {\r\n  const tagArray = [];\r\n  const countMap = [];\r\n  let total = 0;\r\n\r\n  resData.forEach((r) => {\r\n    if (r.tag) {\r\n      total++;\r\n\r\n      const tags = r.tag.split(\" \");\r\n      tags.forEach((tag) => {\r\n        if (tagArray.includes(tag)) {\r\n          countMap[tag]++;\r\n        } else {\r\n          tagArray.push(tag);\r\n          countMap[tag] = 1;\r\n        }\r\n      });\r\n    }\r\n  });\r\n\r\n  tagArray.splice(0, 0, \"전체보기\");\r\n  countMap[tagArray[0]] = total;\r\n\r\n  return [tagArray, countMap];\r\n};\r\n","import React from \"react\";\r\nimport \"./styles/PostsListBox.css\";\r\nimport { TagBox } from \"./TagBox\";\r\nimport { getUpdateTime } from \"../../utils/PostsHelper\";\r\n\r\nexport const PostsListBox = ({\r\n  id,\r\n  title,\r\n  tags,\r\n  contents,\r\n  updatedAt,\r\n  history,\r\n}) => {\r\n  const tagArray = tags.split(\" \");\r\n  const updateTime = getUpdateTime(updatedAt);\r\n  const clickedBox = () => {\r\n    history.push(`/post/:${id}`);\r\n  };\r\n\r\n  return (\r\n    <li className=\"posts_list_box\" onClick={clickedBox}>\r\n      <p className=\"posts_list_box_title\">{title}</p>\r\n      <div className=\"posts_list_box_tags\">\r\n        {tagArray.map((tag, idx) => (\r\n          <TagBox key={`tag_box_${idx}`} tagName={tag} />\r\n        ))}\r\n      </div>\r\n      <p className=\"posts_updated_time\">{updateTime}</p>\r\n    </li>\r\n  );\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport \"./styles/Loading.css\";\r\n\r\nexport const Loading = () => {\r\n  useEffect(() => {\r\n    const body = document.querySelector(\"body\");\r\n    body.style.overflow = \"hidden\";\r\n\r\n    return () => {\r\n      body.style.overflow = \"auto\";\r\n    };\r\n  }, []);\r\n  return (\r\n    <div className=\"loading_template\">\r\n      <div className=\"animation_box\"></div>\r\n      <span>Loading</span>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./styles/Blog.css\";\r\n\r\nimport { Header } from \"../common/Header\";\r\nimport { SideBar } from \"./items/SideBar\";\r\nimport { Login } from \"./items/Login\";\r\nimport { PostsListBox } from \"./items/PostsListBox\";\r\nimport { Loading } from \"./Loading\";\r\nimport { getAll, isLogin } from \"../utils/PostsApi\";\r\nimport { getTagList } from \"../utils/PostsHelper\";\r\nimport urlProvider from \"../utils/ImageProvider\";\r\n\r\nexport const Blog = ({ history }) => {\r\n  const [tags, setTags] = useState(null);\r\n  const [tagCount, setTagCount] = useState(null);\r\n  const [curTag, setCurTag] = useState(null);\r\n  const [originData, setOriginData] = useState(null);\r\n  const [postsData, setPostsData] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const openLogin = () => {\r\n    if (isLogin()) history.push(\"/new\");\r\n    else {\r\n      alert(\"관리자 기능입니다.\");\r\n      const loginTemplate = document.querySelector(\".login_template\");\r\n      loginTemplate.style.display = \"flex\";\r\n    }\r\n  };\r\n\r\n  const tagButtonClicked = (e) => {\r\n    const selectedTag = e.target;\r\n    const selectedList =\r\n      selectedTag.id === \"전체보기\"\r\n        ? originData\r\n        : originData.filter((data) =>\r\n            String(data.tag).includes(selectedTag.id)\r\n          );\r\n\r\n    setPostsData(selectedList);\r\n\r\n    curTag.style.fontWeight = \"normal\";\r\n    curTag.style.color = \"black\";\r\n    selectedTag.style.fontWeight = \"bold\";\r\n    selectedTag.style.color = \"lightseagreen\";\r\n    setCurTag(selectedTag);\r\n\r\n    if (selectedList.length <= 8)\r\n      document.querySelector(\".blog_template\").style.height = \"100vh\";\r\n    else document.querySelector(\".blog_template\").style.height = \"100%\";\r\n  };\r\n\r\n  useEffect(() => {\r\n    const getPostsData = async () => {\r\n      setLoading(true);\r\n      setTags(null);\r\n      setTagCount(null);\r\n      setPostsData(null);\r\n      setOriginData(null);\r\n\r\n      const res = await getAll();\r\n      const [tagArray, countMap] = getTagList(res);\r\n\r\n      setOriginData(res);\r\n      setPostsData(res);\r\n      setTags(tagArray);\r\n      setTagCount(countMap);\r\n      setLoading(false);\r\n\r\n      const defaultTag = document.getElementById(\"전체보기\");\r\n      if (defaultTag) {\r\n        defaultTag.style.fontWeight = \"bold\";\r\n        defaultTag.style.color = \"lightseagreen\";\r\n        setCurTag(defaultTag);\r\n      }\r\n    };\r\n\r\n    getPostsData();\r\n  }, []);\r\n\r\n  if (loading) return <Loading />;\r\n\r\n  return (\r\n    <div className=\"blog_template\">\r\n      <Header />\r\n      <main className=\"blog_template_main\">\r\n        <SideBar\r\n          tags={tags}\r\n          tagButtonClicked={tagButtonClicked}\r\n          tagCount={tagCount}\r\n          history={history}\r\n        />\r\n        <ul className=\"posts_container\">\r\n          {postsData.map((data) => {\r\n            if (data.tag && data.contents)\r\n              return (\r\n                <PostsListBox\r\n                  key={data._id}\r\n                  id={data._id}\r\n                  title={data.title}\r\n                  tags={data.tag}\r\n                  contents={data.contents}\r\n                  updatedAt={data.createdAt}\r\n                  history={history}\r\n                />\r\n              );\r\n            else {\r\n              return null;\r\n            }\r\n          })}\r\n        </ul>\r\n        {/* <div>\r\n          <img\r\n            alt=\"\"\r\n            className=\"set_img\"\r\n            onClick={openLogin}\r\n            src={urlProvider.set}\r\n          />\r\n          <Login history={history} />\r\n        </div> */}\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport \"./styles/NewPosts.css\";\r\nimport ReactMarkdown from \"react-markdown\";\r\nimport gfm from \"remark-gfm\";\r\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\r\nimport { docco } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\r\nimport { create, update } from \"../utils/PostsApi\";\r\n\r\nconst components = {\r\n  code({ children }) {\r\n    return (\r\n      <SyntaxHighlighter\r\n        style={docco}\r\n        language=\"javascript\"\r\n        children={children}\r\n        lineNumberStyle={{\r\n          color: \"gray\",\r\n          fontSize: \"rem;\",\r\n          textAlign: \"center\",\r\n        }}\r\n        showLineNumbers={true}\r\n        PreTag=\"div\"\r\n      />\r\n    );\r\n  },\r\n};\r\n\r\nexport const NewPosts = ({ history }) => {\r\n  const defaultInput = history.location.state\r\n    ? history.location.state.content\r\n    : \"\";\r\n  const [input, setInput] = useState(defaultInput);\r\n\r\n  const createPosts = async () => {\r\n    const title = document.getElementById(\"posts_create_title\").value;\r\n    const tag = document.getElementById(\"posts_create_tag\").value;\r\n    const contents = document.getElementById(\"posts_create_content\").value;\r\n\r\n    if (history.location.state)\r\n      await update(history.location.state.id, {\r\n        title: title,\r\n        tag: tag,\r\n        contents: contents,\r\n      });\r\n    else await create({ title: title, tag: tag, contents: contents });\r\n\r\n    goBack();\r\n  };\r\n\r\n  const goBack = () => {\r\n    history.goBack();\r\n  };\r\n\r\n  return (\r\n    <div className=\"new_posts_template\">\r\n      <div className=\"new_posts_input\">\r\n        <p>title</p>\r\n        <input\r\n          type=\"text\"\r\n          className=\"posts_title\"\r\n          id=\"posts_create_title\"\r\n          defaultValue={\r\n            history.location.state ? history.location.state.title : \"\"\r\n          }\r\n        />\r\n        <p>tag</p>\r\n        <input\r\n          type=\"text\"\r\n          className=\"posts_tags\"\r\n          id=\"posts_create_tag\"\r\n          defaultValue={\r\n            history.location.state ? history.location.state.tags : \"\"\r\n          }\r\n        />\r\n        <p>contents</p>\r\n        <textarea\r\n          className=\"posts_textarea\"\r\n          id=\"posts_create_content\"\r\n          onChange={(e) => setInput(e.target.value)}\r\n          value={input}\r\n        />\r\n        <button onClick={createPosts}>생성</button>\r\n        <button onClick={goBack}>취소</button>\r\n      </div>\r\n      <ReactMarkdown\r\n        className=\"posts_preview\"\r\n        components={components}\r\n        remarkPlugins={[gfm]}\r\n        children={input}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport \"./styles/MarkdownNav.css\";\r\nimport { getNavItems } from \"../../utils/MarkdownParser\";\r\n\r\nexport const MarkdownNav = ({ title, postsContent }) => {\r\n  const strArray = getNavItems(postsContent);\r\n\r\n  function updateNavStyles() {\r\n    function reduceText(target) {\r\n      if (target.clientWidth < target.scrollWidth) {\r\n        while (target.clientWidth < target.scrollWidth) {\r\n          const str = target.innerHTML;\r\n          target.innerHTML = `${str.slice(0, str.length - 4)}...`;\r\n        }\r\n      }\r\n    }\r\n\r\n    const items = document.querySelectorAll(\".markdown_nav_item\");\r\n    const paddingLeft = 15;\r\n\r\n    items.forEach((item, idx) => {\r\n      item.style.paddingLeft = `${paddingLeft * strArray[idx][0].length}px`;\r\n      reduceText(item);\r\n    });\r\n\r\n    const navTitle = document.querySelector(\".markdown_nav_title\");\r\n    reduceText(navTitle);\r\n    navTitle.addEventListener(\"click\", () => {\r\n      const target = document.querySelector(\".posts_detail_title\");\r\n      target.scrollIntoView();\r\n    });\r\n  }\r\n\r\n  function setShortcutsEvent() {\r\n    function shortcutsEvent(e) {\r\n      const target = e.target.closest(\".markdown_nav_item\");\r\n\r\n      if (target) {\r\n        const value = target.innerHTML;\r\n        const text =\r\n          value.slice(value.length - 3, value.length) === \"...\"\r\n            ? value.slice(0, value.length - 3)\r\n            : value;\r\n\r\n        const destination = headings.find((ele) =>\r\n          ele.innerHTML.includes(text)\r\n        );\r\n\r\n        if (destination) destination.scrollIntoView();\r\n      }\r\n    }\r\n\r\n    const headings = [\r\n      ...document.querySelectorAll(\"h1\"),\r\n      ...document.querySelectorAll(\"h2\"),\r\n      ...document.querySelectorAll(\"h3\"),\r\n      ...document.querySelectorAll(\"h4\"),\r\n    ];\r\n\r\n    const nav = document.querySelector(\".markdown_nav\");\r\n    nav.addEventListener(\"click\", shortcutsEvent);\r\n  }\r\n\r\n  useEffect(() => {\r\n    updateNavStyles();\r\n    setShortcutsEvent();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"markdown_nav\">\r\n      <span className=\"markdown_nav_title\">{title}</span>\r\n      {strArray.map((line, idx) => (\r\n        <span className=\"markdown_nav_item\" key={line + idx}>\r\n          {line[1]}\r\n        </span>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import styled, { css } from \"styled-components\";\r\n\r\nexport const CirCleButton = styled.span`\r\n  width: 50px;\r\n  height: 50px;\r\n  border-radius: 25px;\r\n  text-align: center;\r\n  background-color: white;\r\n  background-size: cover;\r\n  margin: 10px;\r\n\r\n  ${(props) =>\r\n    props.primary &&\r\n    css`\r\n      background-image: url(${process.env.PUBLIC_URL + props.backgroundImage});\r\n      background-color: ${props.backgroundColor};\r\n    `}\r\n`;\r\n","export const getNavItems = (postsContent) =>\r\n  postsContent\r\n    .split(\"\\n\")\r\n    .filter(\r\n      (line) => line.replaceAll(\" \", \"\")[0] === \"#\" && !line.includes(\"####\")\r\n    )\r\n    .map((line) => line.split(\"# \"));\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport ReactMarkdown from \"react-markdown\";\r\nimport gfm from \"remark-gfm\";\r\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\r\nimport { docco } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\r\n\r\nimport \"./styles/Posts.css\";\r\n\r\nimport { Loading } from \"./Loading\";\r\nimport { TagBox } from \"./items/TagBox\";\r\nimport { CirCleButton } from \"./items/CircleButton\";\r\nimport { isLogin, getDetail, remove } from \"../utils/PostsApi\";\r\nimport { getUpdateTime } from \"../utils/PostsHelper\";\r\nimport { MarkdownNav } from \"./items/MarkdownNav\";\r\nimport urlProvider from \"../utils/ImageProvider\";\r\n\r\nconst components = {\r\n  code({ children }) {\r\n    return (\r\n      <SyntaxHighlighter\r\n        style={docco}\r\n        language=\"javascript\"\r\n        children={children}\r\n        lineNumberStyle={{\r\n          color: \"gray\",\r\n          fontSize: \"0.875rem\",\r\n          textAlign: \"center\",\r\n        }}\r\n        showLineNumbers={true}\r\n        PreTag=\"div\"\r\n      />\r\n    );\r\n  },\r\n};\r\n\r\nexport const Posts = ({ match, history }) => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [detailData, setDetailData] = useState(null);\r\n  const [tags, setTags] = useState(null);\r\n  const [content, setContent] = useState(null);\r\n\r\n  const goHome = () => history.push(\"/\");\r\n\r\n  const updatePosts = async () => {\r\n    history.push({\r\n      pathname: \"/new\",\r\n      state: {\r\n        id: match.params.postsId,\r\n        title: detailData.title,\r\n        tags: tags.join(\" \"),\r\n        content: content,\r\n      },\r\n    });\r\n  };\r\n\r\n  const deletePosts = async () => {\r\n    const res = await remove(match.params.postsId);\r\n    if (res === 200) history.push(\"/\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    const getDetailPosts = async () => {\r\n      setLoading(true);\r\n      setDetailData(null);\r\n      setTags(null);\r\n      setContent(null);\r\n\r\n      const postsId = match.params.postsId;\r\n      const data = await getDetail(postsId);\r\n      const postsContent = data.contents;\r\n\r\n      setDetailData(data);\r\n      setTags(data.tag.split(\" \"));\r\n      setContent(postsContent);\r\n      setLoading(false);\r\n    };\r\n\r\n    getDetailPosts();\r\n  }, [match.params.postsId]);\r\n\r\n  if (loading) return <Loading />;\r\n\r\n  return (\r\n    <div className=\"posts_detail_template\">\r\n      <div className=\"markdown_nav_container\">\r\n        <h2 onClick={goHome}>Code Story</h2>\r\n        <MarkdownNav title={detailData.title} postsContent={content} />\r\n      </div>\r\n      <div className=\"posts_detail_container\">\r\n        <div className=\"posts_detail_title\">\r\n          <p>{detailData.title}</p>\r\n        </div>\r\n        <div className=\"posts_detail_info\">\r\n          <div className=\"posts_detail_info_tag\">\r\n            {tags.map((tag, idx) => (\r\n              <TagBox key={`tag_box_${idx}`} tagName={tag} id={idx} />\r\n            ))}\r\n          </div>\r\n          <div className=\"posts_detail_info_time\">\r\n            {isLogin() ? (\r\n              <div>\r\n                <button onClick={updatePosts}>수정</button>\r\n                <button onClick={deletePosts}>삭제</button>\r\n              </div>\r\n            ) : (\r\n              <span />\r\n            )}\r\n            {getUpdateTime(detailData.updatedAt)}\r\n          </div>\r\n        </div>\r\n        <ReactMarkdown\r\n          className=\"posts_detail_content\"\r\n          components={components}\r\n          remarkPlugins={[gfm]}\r\n          children={content}\r\n        />\r\n      </div>\r\n      {/* <div className=\"posts_detail_nav\">\r\n        <CirCleButton\r\n          className=\"posts_detail_nav_button\"\r\n          primary={true}\r\n          backgroundImage={urlProvider.nav.upImgUrl}\r\n          backgroundColor=\"whitesmoke\"\r\n          onClick={toTheTop}\r\n        />\r\n        <div>\r\n          <CirCleButton\r\n            className=\"posts_detail_nav_button\"\r\n            primary={true}\r\n            backgroundImage={urlProvider.nav.listImgUrl}\r\n            backgroundColor=\"lightgray\"\r\n          />\r\n          <CirCleButton\r\n            className=\"posts_detail_nav_button\"\r\n            primary={true}\r\n            backgroundImage={urlProvider.nav.heartImgUrl}\r\n          />\r\n          <CirCleButton\r\n            className=\"posts_detail_nav_button\"\r\n            primary={true}\r\n            backgroundImage={urlProvider.nav.shareImgUrl}\r\n          />\r\n        </div>\r\n        <CirCleButton\r\n          className=\"posts_detail_nav_button\"\r\n          primary={true}\r\n          backgroundImage={urlProvider.nav.downImgUrl}\r\n          backgroundColor=\"whitesmoke\"\r\n          onClick={toTheBottom}\r\n        />\r\n      </div> */}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Route } from \"react-router\";\r\nimport { About } from \"./pages/About\";\r\nimport { Toys } from \"./pages/Toys\";\r\nimport { Blog } from \"./pages/Blog\";\r\nimport { NewPosts } from \"./pages/NewPosts\";\r\nimport { Posts } from \"./pages/Posts\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Route path=\"/\" exact={true} component={Blog} />\r\n      <Route path=\"/post/:postsId\" exact={true} component={Posts} />\r\n      <Route path=\"/about\" component={About} />\r\n      <Route path=\"/toys\" component={Toys} />\r\n      <Route path=\"/new\" component={NewPosts} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport \"./index.css\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}